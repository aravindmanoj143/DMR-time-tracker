{"ast":null,"code":"import _asyncToGenerator from \"/home/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { o as getPresentedOverlay, B as BACKDROP, n as focusFirstDescendant, q as focusLastDescendant, G as GESTURE } from './overlays.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nimport { shouldUseCloseWatcher } from './hardware-back-button.js';\nimport { m as isEndSide, i as inheritAriaAttributes, n as assert, f as clamp } from './helpers.js';\nimport { c as config, a as printIonError } from './index4.js';\nimport { m as menuController } from './index5.js';\nimport { b as getIonMode, a as isPlatform } from './ionic-global.js';\nimport { h as hostContext } from './theme.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = /*@__PURE__*/proxyCustomElement(class Menu extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    this.didLoad = false;\n    /**\n     * Flag used to determine if an open/close\n     * operation was cancelled. For example, if\n     * an app calls \"menu.open\" then disables the menu\n     * part way through the animation, then this would\n     * be considered a cancelled operation.\n     */\n    this.operationCancelled = false;\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.inheritedAttributes = {};\n    this.handleFocus = ev => {\n      /**\n       * Overlays have their own focus trapping listener\n       * so we do not want the two listeners to conflict\n       * with each other. If the top-most overlay that is\n       * open does not contain this ion-menu, then ion-menu's\n       * focus trapping should not run.\n       */\n      const lastOverlay = getPresentedOverlay(document);\n      if (lastOverlay && !lastOverlay.contains(this.el)) {\n        return;\n      }\n      this.trapKeyboardFocus(ev, document);\n    };\n    /**\n     * If true, then the menu should be\n     * visible within a split pane.\n     * If false, then the menu is hidden.\n     * However, the menu-button/menu-toggle\n     * components can be used to open the\n     * menu.\n     */\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    /**\n     * If `true`, the menu is disabled.\n     */\n    this.disabled = false;\n    /**\n     * Which side of the view the menu should be placed.\n     */\n    this.side = 'start';\n    /**\n     * If `true`, swiping the menu is enabled.\n     */\n    this.swipeGesture = true;\n    /**\n     * The edge threshold for dragging the menu open.\n     * If a drag/swipe happens over this value, the menu is not triggered.\n     */\n    this.maxEdgeStart = 50;\n  }\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n    this.animation = undefined;\n  }\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen\n    });\n  }\n  sideChanged() {\n    this.isEndSide = isEndSide(this.side);\n    /**\n     * Menu direction animation is calculated based on the document direction.\n     * If the document direction changes, we need to create a new animation.\n     */\n    this.animation = undefined;\n  }\n  swipeGestureChanged() {\n    this.updateState();\n  }\n  connectedCallback() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // TODO: connectedCallback is fired in CE build\n      // before WC is defined. This needs to be fixed in Stencil.\n      if (typeof customElements !== 'undefined' && customElements != null) {\n        yield customElements.whenDefined('ion-menu');\n      }\n      if (_this.type === undefined) {\n        _this.type = config.get('menuType', 'overlay');\n      }\n      if (!Build.isBrowser) {\n        return;\n      }\n      const content = _this.contentId !== undefined ? document.getElementById(_this.contentId) : null;\n      if (content === null) {\n        printIonError('[ion-menu] - Must have a \"content\" element to listen for drag events on.');\n        return;\n      }\n      if (_this.el.contains(content)) {\n        printIonError(`[ion-menu] - The \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n      }\n      _this.contentEl = content;\n      // add menu's content classes\n      content.classList.add('menu-content');\n      _this.typeChanged(_this.type, undefined);\n      _this.sideChanged();\n      // register this menu with the app's menu controller\n      menuController._register(_this);\n      _this.menuChanged();\n      _this.gesture = (yield import('./index3.js')).createGesture({\n        el: document,\n        gestureName: 'menu-swipe',\n        gesturePriority: 30,\n        threshold: 10,\n        blurOnStart: true,\n        canStart: ev => _this.canStart(ev),\n        onWillStart: () => _this.onWillStart(),\n        onStart: () => _this.onStart(),\n        onMove: ev => _this.onMove(ev),\n        onEnd: ev => _this.onEnd(ev)\n      });\n      _this.updateState();\n    })();\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  componentDidLoad() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.didLoad = true;\n      /**\n       * A menu inside of a split pane is assumed\n       * to be a side pane.\n       *\n       * When the menu is loaded it needs to\n       * see if it should be considered visible inside\n       * of the split pane. If the split pane is\n       * hidden then the menu should be too.\n       */\n      const splitPane = _this2.el.closest('ion-split-pane');\n      if (splitPane !== null) {\n        _this2.isPaneVisible = yield splitPane.isVisible();\n      }\n      _this2.menuChanged();\n      _this2.updateState();\n    })();\n  }\n  menuChanged() {\n    /**\n     * Inform dependent components such as ion-menu-button\n     * that the menu is ready. Note that we only want to do this\n     * once the menu has been rendered which is why we check for didLoad.\n     */\n    if (this.didLoad) {\n      this.ionMenuChange.emit({\n        disabled: this.disabled,\n        open: this._isOpen\n      });\n    }\n  }\n  disconnectedCallback() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      /**\n       * The menu should be closed when it is\n       * unmounted from the DOM.\n       * This is an async call, so we need to wait for\n       * this to finish otherwise contentEl\n       * will not have MENU_CONTENT_OPEN removed.\n       */\n      yield _this3.close(false);\n      _this3.blocker.destroy();\n      menuController._unregister(_this3);\n      if (_this3.animation) {\n        _this3.animation.destroy();\n      }\n      if (_this3.gesture) {\n        _this3.gesture.destroy();\n        _this3.gesture = undefined;\n      }\n      _this3.animation = undefined;\n      _this3.contentEl = undefined;\n    })();\n  }\n  onSplitPaneChanged(ev) {\n    const closestSplitPane = this.el.closest('ion-split-pane');\n    if (closestSplitPane !== null && closestSplitPane === ev.target) {\n      this.isPaneVisible = ev.detail.visible;\n      this.updateState();\n    }\n  }\n  onBackdropClick(ev) {\n    // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close(undefined, BACKDROP);\n      }\n    }\n  }\n  onKeydown(ev) {\n    if (ev.key === 'Escape') {\n      this.close(undefined, BACKDROP);\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` if the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   *\n   * @param animated If `true`, the menu will animate when opening.\n   * If `false`, the menu will open instantly without animation.\n   * Defaults to `true`.\n   */\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   *\n   * @param animated If `true`, the menu will animate when closing. If `false`,\n   * the menu will close instantly without animation. Defaults to `true`.\n   * @param role The role of the element that is closing the menu.\n   * This can be useful in a button handler for determining which button was\n   * clicked to close the menu. Some examples include:\n   * `\"cancel\"`, `\"destructive\"`, `\"selected\"`, and `\"backdrop\"`.\n   */\n  close(animated = true, role) {\n    return this.setOpen(false, animated, role);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close,\n   * otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   *\n   * @param animated If `true`, the menu will animate when opening/closing.\n   * If `false`, the menu will open/close instantly without animation.\n   * Defaults to `true`.\n   */\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the menu.\n   * If the operation can't be completed successfully, it returns `false`.\n   *\n   * @param shouldOpen If `true`, the menu will open. If `false`, the menu\n   * will close.\n   * @param animated If `true`, the menu will animate when opening/closing.\n   * If `false`, the menu will open/close instantly without animation.\n   * @param role The role of the element that is closing the menu.\n   */\n  setOpen(shouldOpen, animated = true, role) {\n    return menuController._setOpen(this, shouldOpen, animated, role);\n  }\n  trapKeyboardFocus(ev, doc) {\n    const target = ev.target;\n    if (!target) {\n      return;\n    }\n    /**\n     * If the target is inside the menu contents, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n    if (this.el.contains(target)) {\n      this.lastFocus = target;\n    } else {\n      /**\n       * Otherwise, we are about to have focus go out of the menu.\n       * Wrap the focus to either the first or last element.\n       */\n      const {\n        el\n      } = this;\n      /**\n       * Once we call `focusFirstDescendant`, another focus event\n       * will fire, which will cause `lastFocus` to be updated\n       * before we can run the code after that. We cache the value\n       * here to avoid that.\n       */\n      focusFirstDescendant(el);\n      /**\n       * If the cached last focused element is the same as the now-\n       * active element, that means the user was on the first element\n       * already and pressed Shift + Tab, so we need to wrap to the\n       * last descendant.\n       */\n      if (this.lastFocus === doc.activeElement) {\n        focusLastDescendant(el);\n      }\n    }\n  }\n  _setOpen(_x) {\n    var _this4 = this;\n    return _asyncToGenerator(function* (shouldOpen, animated = true, role) {\n      // If the menu is disabled or it is currently being animated, let's do nothing\n      if (!_this4._isActive() || _this4.isAnimating || shouldOpen === _this4._isOpen) {\n        return false;\n      }\n      _this4.beforeAnimation(shouldOpen, role);\n      yield _this4.loadAnimation();\n      yield _this4.startAnimation(shouldOpen, animated);\n      /**\n       * If the animation was cancelled then\n       * return false because the operation\n       * did not succeed.\n       */\n      if (_this4.operationCancelled) {\n        _this4.operationCancelled = false;\n        return false;\n      }\n      _this4.afterAnimation(shouldOpen, role);\n      return true;\n    }).apply(this, arguments);\n  }\n  loadAnimation() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      // Menu swipe animation takes the menu's inner width as parameter,\n      // If `offsetWidth` changes, we need to create a new animation.\n      const width = _this5.menuInnerEl.offsetWidth;\n      /**\n       * Menu direction animation is calculated based on the document direction.\n       * If the document direction changes, we need to create a new animation.\n       */\n      const isEndSide$1 = isEndSide(_this5.side);\n      if (width === _this5.width && _this5.animation !== undefined && isEndSide$1 === _this5.isEndSide) {\n        return;\n      }\n      _this5.width = width;\n      _this5.isEndSide = isEndSide$1;\n      // Destroy existing animation\n      if (_this5.animation) {\n        _this5.animation.destroy();\n        _this5.animation = undefined;\n      }\n      // Create new animation\n      const animation = _this5.animation = yield menuController._createAnimation(_this5.type, _this5);\n      if (!config.getBoolean('animated', true)) {\n        animation.duration(0);\n      }\n      animation.fill('both');\n    })();\n  }\n  startAnimation(shouldOpen, animated) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const isReversed = !shouldOpen;\n      const mode = getIonMode(_this6);\n      const easing = mode === 'ios' ? iosEasing : mdEasing;\n      const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n      const ani = _this6.animation.direction(isReversed ? 'reverse' : 'normal').easing(isReversed ? easingReverse : easing);\n      if (animated) {\n        yield ani.play();\n      } else {\n        ani.play({\n          sync: true\n        });\n      }\n      /**\n       * We run this after the play invocation\n       * instead of using ani.onFinish so that\n       * multiple onFinish callbacks do not get\n       * run if an animation is played, stopped,\n       * and then played again.\n       */\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    })();\n  }\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n    if (this._isOpen) {\n      return true;\n    } else if (menuController._getOpenSync()) {\n      return false;\n    }\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen, GESTURE);\n    return this.loadAnimation();\n  }\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    // the cloned animation should not use an easing curve during seek\n    this.animation.progressStart(true, this._isOpen ? 1 : 0);\n  }\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n  }\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen ? isEndSide ? shouldCompleteRight : shouldCompleteLeft : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n    this.lastOnEnd = detail.currentTime;\n    // Account for rounding errors in JS\n    let newStepValue = shouldComplete ? 0.001 : -1e-3;\n    /**\n     * stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     */\n    const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n    newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n    this.animation.easing('cubic-bezier(0.4, 0.0, 0.6, 1)').onFinish(() => this.afterAnimation(shouldOpen, GESTURE), {\n      oneTimeCallback: true\n    }).progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n  }\n  beforeAnimation(shouldOpen, role) {\n    assert(!this.isAnimating, '_before() should not be called while animating');\n    /**\n     * When the menu is presented on an Android device, TalkBack's focus rings\n     * may appear in the wrong position due to the transition (specifically\n     * `transform` styles). This occurs because the focus rings are initially\n     * displayed at the starting position of the elements before the transition\n     * begins. This workaround ensures the focus rings do not appear in the\n     * incorrect location.\n     *\n     * If this solution is applied to iOS devices, then it leads to a bug where\n     * the overlays cannot be accessed by screen readers. This is due to\n     * VoiceOver not being able to update the accessibility tree when the\n     * `aria-hidden` is removed.\n     */\n    if (isPlatform('android')) {\n      this.el.setAttribute('aria-hidden', 'true');\n    }\n    // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n    this.el.classList.add(SHOW_MENU);\n    /**\n     * We add a tabindex here so that focus trapping\n     * still works even if the menu does not have\n     * any focusable elements slotted inside. The\n     * focus trapping utility will fallback to focusing\n     * the menu so focus does not leave when the menu\n     * is open.\n     */\n    this.el.setAttribute('tabindex', '0');\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n    // add css class and hide content behind menu from screen readers\n    if (this.contentEl) {\n      this.contentEl.classList.add(MENU_CONTENT_OPEN);\n      /**\n       * When the menu is open and overlaying the main\n       * content, the main content should not be announced\n       * by the screenreader as the menu is the main\n       * focus. This is useful with screenreaders that have\n       * \"read from top\" gestures that read the entire\n       * page from top to bottom when activated.\n       * This should be done before the animation starts\n       * so that users cannot accidentally scroll\n       * the content while dragging a menu open.\n       */\n      this.contentEl.setAttribute('aria-hidden', 'true');\n    }\n    this.blocker.block();\n    this.isAnimating = true;\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    } else {\n      this.ionWillClose.emit({\n        role\n      });\n    }\n  }\n  afterAnimation(isOpen, role) {\n    var _a;\n    // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n    if (isOpen) {\n      /**\n       * When the menu is presented on an Android device, TalkBack's focus rings\n       * may appear in the wrong position due to the transition (specifically\n       * `transform` styles). The menu is hidden from screen readers during the\n       * transition to prevent this. Once the transition is complete, the menu\n       * is shown again.\n       */\n      if (isPlatform('android')) {\n        this.el.removeAttribute('aria-hidden');\n      }\n      // emit open event\n      this.ionDidOpen.emit();\n      /**\n       * Move focus to the menu to prepare focus trapping, as long as\n       * it isn't already focused. Use the host element instead of the\n       * first descendant to avoid the scroll position jumping around.\n       */\n      const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n      if (focusedMenu !== this.el) {\n        this.el.focus();\n      }\n      // start focus trapping\n      document.addEventListener('focus', this.handleFocus, true);\n    } else {\n      this.el.removeAttribute('aria-hidden');\n      // remove css classes and unhide content from screen readers\n      this.el.classList.remove(SHOW_MENU);\n      /**\n       * Remove tabindex from the menu component\n       * so that is cannot be tabbed to.\n       */\n      this.el.removeAttribute('tabindex');\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n        /**\n         * Remove aria-hidden so screen readers\n         * can announce the main content again\n         * now that the menu is not the main focus.\n         */\n        this.contentEl.removeAttribute('aria-hidden');\n      }\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n      if (this.animation) {\n        this.animation.stop();\n      }\n      // emit close event\n      this.ionDidClose.emit({\n        role\n      });\n      // undo focus trapping so multiple menus don't collide\n      document.removeEventListener('focus', this.handleFocus, true);\n    }\n  }\n  updateState() {\n    const isActive = this._isActive();\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    }\n    /**\n     * If the menu is disabled but it is still open\n     * then we should close the menu immediately.\n     * Additionally, if the menu is in the process\n     * of animating {open, close} and the menu is disabled\n     * then it should still be closed immediately.\n     */\n    if (!isActive) {\n      /**\n       * It is possible to disable the menu while\n       * it is mid-animation. When this happens, we\n       * need to set the operationCancelled flag\n       * so that this._setOpen knows to return false\n       * and not run the \"afterAnimation\" callback.\n       */\n      if (this.isAnimating) {\n        this.operationCancelled = true;\n      }\n      /**\n       * If the menu is disabled then we should\n       * forcibly close the menu even if it is open.\n       */\n      this.afterAnimation(false, GESTURE);\n    }\n  }\n  render() {\n    const {\n      type,\n      disabled,\n      el,\n      isPaneVisible,\n      inheritedAttributes,\n      side\n    } = this;\n    const mode = getIonMode(this);\n    /**\n     * If the Close Watcher is enabled then\n     * the ionBackButton listener in the menu controller\n     * will handle closing the menu when Escape is pressed.\n     */\n    return h(Host, {\n      key: 'a5c75aa40a34530b56ee3b98d706a5ac5ae300de',\n      onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown,\n      role: \"navigation\",\n      \"aria-label\": inheritedAttributes['aria-label'] || 'menu',\n      class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        [`menu-side-${side}`]: true,\n        'menu-pane-visible': isPaneVisible,\n        'split-pane-side': hostContext('ion-split-pane', el)\n      }\n    }, h(\"div\", {\n      key: '3f5f70acd4d3ed6bb445122f4f01d73db738a75f',\n      class: \"menu-inner\",\n      part: \"container\",\n      ref: el => this.menuInnerEl = el\n    }, h(\"slot\", {\n      key: '3161326c9330e7f7441299c428b87a91b31a83e9'\n    })), h(\"ion-backdrop\", {\n      key: '917b50f38489bdf03d0c642af8b4e4e172c7dc4c',\n      ref: el => this.backdropEl = el,\n      class: \"menu-backdrop\",\n      tappable: false,\n      stopPropagation: false,\n      part: \"backdrop\"\n    }));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"type\": [\"typeChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"side\": [\"sideChanged\"],\n      \"swipeGesture\": [\"swipeGestureChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: menuIosCss,\n      md: menuMdCss\n    };\n  }\n}, [289, \"ion-menu\", {\n  \"contentId\": [513, \"content-id\"],\n  \"menuId\": [513, \"menu-id\"],\n  \"type\": [1025],\n  \"disabled\": [1028],\n  \"side\": [513],\n  \"swipeGesture\": [4, \"swipe-gesture\"],\n  \"maxEdgeStart\": [2, \"max-edge-start\"],\n  \"isPaneVisible\": [32],\n  \"isEndSide\": [32],\n  \"isOpen\": [64],\n  \"isActive\": [64],\n  \"open\": [64],\n  \"close\": [64],\n  \"toggle\": [64],\n  \"setOpen\": [64]\n}, [[16, \"ionSplitPaneVisible\", \"onSplitPaneChanged\"], [2, \"click\", \"onBackdropClick\"]], {\n  \"type\": [\"typeChanged\"],\n  \"disabled\": [\"disabledChanged\"],\n  \"side\": [\"sideChanged\"],\n  \"swipeGesture\": [\"swipeGestureChanged\"]\n}]);\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  } else {\n    return posX <= maxEdgeStart;\n  }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-menu\", \"ion-backdrop\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-menu\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Menu);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonMenu = Menu;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonMenu, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","Build","h","Host","g","getTimeGivenProgression","o","getPresentedOverlay","B","BACKDROP","n","focusFirstDescendant","q","focusLastDescendant","G","GESTURE","GESTURE_CONTROLLER","shouldUseCloseWatcher","m","isEndSide","i","inheritAriaAttributes","assert","f","clamp","c","config","a","printIonError","menuController","b","getIonMode","isPlatform","hostContext","d","defineCustomElement$2","menuIosCss","menuMdCss","iosEasing","mdEasing","iosEasingReverse","mdEasingReverse","Menu","constructor","__registerHost","__attachShadow","ionWillOpen","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","createBlocker","disableScroll","didLoad","operationCancelled","isAnimating","_isOpen","inheritedAttributes","handleFocus","ev","lastOverlay","document","contains","el","trapKeyboardFocus","isPaneVisible","disabled","side","swipeGesture","maxEdgeStart","typeChanged","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","emit","open","sideChanged","swipeGestureChanged","connectedCallback","_this","_asyncToGenerator","customElements","whenDefined","get","isBrowser","content","contentId","getElementById","_register","menuChanged","gesture","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentWillLoad","componentDidLoad","_this2","splitPane","closest","isVisible","disconnectedCallback","_this3","close","destroy","_unregister","onSplitPaneChanged","closestSplitPane","target","detail","visible","onBackdropClick","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","onKeydown","key","isOpen","Promise","resolve","isActive","_isActive","animated","setOpen","role","toggle","shouldOpen","_setOpen","doc","lastFocus","activeElement","_x","_this4","beforeAnimation","loadAnimation","startAnimation","afterAnimation","apply","arguments","_this5","width","offsetWidth","isEndSide$1","_createAnimation","getBoolean","duration","fill","_this6","isReversed","mode","easing","easingReverse","ani","direction","play","sync","getDirection","canSwipe","isModalPresented","querySelector","_getOpenSync","checkEdgeSide","window","currentX","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","playTo","onFinish","oneTimeCallback","progressEnd","setAttribute","SHOW_MENU","backdropEl","SHOW_BACKDROP","MENU_CONTENT_OPEN","block","_a","unblock","focusedMenu","focus","addEventListener","stop","removeEventListener","enable","render","onKeyDown","class","part","ref","tappable","watchers","style","ios","md","Math","max","win","posX","innerWidth","defineCustomElement$1","components","forEach","tagName","define","IonMenu","defineCustomElement"],"sources":["/home/project/node_modules/@ionic/core/components/ion-menu.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { o as getPresentedOverlay, B as BACKDROP, n as focusFirstDescendant, q as focusLastDescendant, G as GESTURE } from './overlays.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nimport { shouldUseCloseWatcher } from './hardware-back-button.js';\nimport { m as isEndSide, i as inheritAriaAttributes, n as assert, f as clamp } from './helpers.js';\nimport { c as config, a as printIonError } from './index4.js';\nimport { m as menuController } from './index5.js';\nimport { b as getIonMode, a as isPlatform } from './ionic-global.js';\nimport { h as hostContext } from './theme.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = /*@__PURE__*/ proxyCustomElement(class Menu extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.didLoad = false;\n        /**\n         * Flag used to determine if an open/close\n         * operation was cancelled. For example, if\n         * an app calls \"menu.open\" then disables the menu\n         * part way through the animation, then this would\n         * be considered a cancelled operation.\n         */\n        this.operationCancelled = false;\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.inheritedAttributes = {};\n        this.handleFocus = (ev) => {\n            /**\n             * Overlays have their own focus trapping listener\n             * so we do not want the two listeners to conflict\n             * with each other. If the top-most overlay that is\n             * open does not contain this ion-menu, then ion-menu's\n             * focus trapping should not run.\n             */\n            const lastOverlay = getPresentedOverlay(document);\n            if (lastOverlay && !lastOverlay.contains(this.el)) {\n                return;\n            }\n            this.trapKeyboardFocus(ev, document);\n        };\n        /**\n         * If true, then the menu should be\n         * visible within a split pane.\n         * If false, then the menu is hidden.\n         * However, the menu-button/menu-toggle\n         * components can be used to open the\n         * menu.\n         */\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen,\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        this.animation = undefined;\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-menu');\n        }\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        if (!Build.isBrowser) {\n            return;\n        }\n        const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n        if (content === null) {\n            printIonError('[ion-menu] - Must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        if (this.el.contains(content)) {\n            printIonError(`[ion-menu] - The \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.menuChanged();\n        this.gesture = (await import('./index3.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            blurOnStart: true,\n            canStart: (ev) => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    async componentDidLoad() {\n        this.didLoad = true;\n        /**\n         * A menu inside of a split pane is assumed\n         * to be a side pane.\n         *\n         * When the menu is loaded it needs to\n         * see if it should be considered visible inside\n         * of the split pane. If the split pane is\n         * hidden then the menu should be too.\n         */\n        const splitPane = this.el.closest('ion-split-pane');\n        if (splitPane !== null) {\n            this.isPaneVisible = await splitPane.isVisible();\n        }\n        this.menuChanged();\n        this.updateState();\n    }\n    menuChanged() {\n        /**\n         * Inform dependent components such as ion-menu-button\n         * that the menu is ready. Note that we only want to do this\n         * once the menu has been rendered which is why we check for didLoad.\n         */\n        if (this.didLoad) {\n            this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        }\n    }\n    async disconnectedCallback() {\n        /**\n         * The menu should be closed when it is\n         * unmounted from the DOM.\n         * This is an async call, so we need to wait for\n         * this to finish otherwise contentEl\n         * will not have MENU_CONTENT_OPEN removed.\n         */\n        await this.close(false);\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        const closestSplitPane = this.el.closest('ion-split-pane');\n        if (closestSplitPane !== null && closestSplitPane === ev.target) {\n            this.isPaneVisible = ev.detail.visible;\n            this.updateState();\n        }\n    }\n    onBackdropClick(ev) {\n        // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close(undefined, BACKDROP);\n            }\n        }\n    }\n    onKeydown(ev) {\n        if (ev.key === 'Escape') {\n            this.close(undefined, BACKDROP);\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` if the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     *\n     * @param animated If `true`, the menu will animate when opening.\n     * If `false`, the menu will open instantly without animation.\n     * Defaults to `true`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     *\n     * @param animated If `true`, the menu will animate when closing. If `false`,\n     * the menu will close instantly without animation. Defaults to `true`.\n     * @param role The role of the element that is closing the menu.\n     * This can be useful in a button handler for determining which button was\n     * clicked to close the menu. Some examples include:\n     * `\"cancel\"`, `\"destructive\"`, `\"selected\"`, and `\"backdrop\"`.\n     */\n    close(animated = true, role) {\n        return this.setOpen(false, animated, role);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close,\n     * otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     *\n     * @param animated If `true`, the menu will animate when opening/closing.\n     * If `false`, the menu will open/close instantly without animation.\n     * Defaults to `true`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the menu.\n     * If the operation can't be completed successfully, it returns `false`.\n     *\n     * @param shouldOpen If `true`, the menu will open. If `false`, the menu\n     * will close.\n     * @param animated If `true`, the menu will animate when opening/closing.\n     * If `false`, the menu will open/close instantly without animation.\n     * @param role The role of the element that is closing the menu.\n     */\n    setOpen(shouldOpen, animated = true, role) {\n        return menuController._setOpen(this, shouldOpen, animated, role);\n    }\n    trapKeyboardFocus(ev, doc) {\n        const target = ev.target;\n        if (!target) {\n            return;\n        }\n        /**\n         * If the target is inside the menu contents, let the browser\n         * focus as normal and keep a log of the last focused element.\n         */\n        if (this.el.contains(target)) {\n            this.lastFocus = target;\n        }\n        else {\n            /**\n             * Otherwise, we are about to have focus go out of the menu.\n             * Wrap the focus to either the first or last element.\n             */\n            const { el } = this;\n            /**\n             * Once we call `focusFirstDescendant`, another focus event\n             * will fire, which will cause `lastFocus` to be updated\n             * before we can run the code after that. We cache the value\n             * here to avoid that.\n             */\n            focusFirstDescendant(el);\n            /**\n             * If the cached last focused element is the same as the now-\n             * active element, that means the user was on the first element\n             * already and pressed Shift + Tab, so we need to wrap to the\n             * last descendant.\n             */\n            if (this.lastFocus === doc.activeElement) {\n                focusLastDescendant(el);\n            }\n        }\n    }\n    async _setOpen(shouldOpen, animated = true, role) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen, role);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        /**\n         * If the animation was cancelled then\n         * return false because the operation\n         * did not succeed.\n         */\n        if (this.operationCancelled) {\n            this.operationCancelled = false;\n            return false;\n        }\n        this.afterAnimation(shouldOpen, role);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        const isEndSide$1 = isEndSide(this.side);\n        if (width === this.width && this.animation !== undefined && isEndSide$1 === this.isEndSide) {\n            return;\n        }\n        this.width = width;\n        this.isEndSide = isEndSide$1;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        const animation = (this.animation = await menuController._createAnimation(this.type, this));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction(isReversed ? 'reverse' : 'normal')\n            .easing(isReversed ? easingReverse : easing);\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n        /**\n         * We run this after the play invocation\n         * instead of using ani.onFinish so that\n         * multiple onFinish callbacks do not get\n         * run if an animation is played, stopped,\n         * and then played again.\n         */\n        if (ani.getDirection() === 'reverse') {\n            ani.direction('normal');\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen, GESTURE);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, this._isOpen ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide\n                ? shouldCompleteRight\n                : shouldCompleteLeft\n            : isEndSide\n                ? shouldCompleteLeft\n                : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = shouldComplete ? 0.001 : -1e-3;\n        /**\n         * stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         */\n        const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue +=\n            getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen, GESTURE), { oneTimeCallback: true })\n            .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen, role) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        /**\n         * When the menu is presented on an Android device, TalkBack's focus rings\n         * may appear in the wrong position due to the transition (specifically\n         * `transform` styles). This occurs because the focus rings are initially\n         * displayed at the starting position of the elements before the transition\n         * begins. This workaround ensures the focus rings do not appear in the\n         * incorrect location.\n         *\n         * If this solution is applied to iOS devices, then it leads to a bug where\n         * the overlays cannot be accessed by screen readers. This is due to\n         * VoiceOver not being able to update the accessibility tree when the\n         * `aria-hidden` is removed.\n         */\n        if (isPlatform('android')) {\n            this.el.setAttribute('aria-hidden', 'true');\n        }\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        /**\n         * We add a tabindex here so that focus trapping\n         * still works even if the menu does not have\n         * any focusable elements slotted inside. The\n         * focus trapping utility will fallback to focusing\n         * the menu so focus does not leave when the menu\n         * is open.\n         */\n        this.el.setAttribute('tabindex', '0');\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        // add css class and hide content behind menu from screen readers\n        if (this.contentEl) {\n            this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            /**\n             * When the menu is open and overlaying the main\n             * content, the main content should not be announced\n             * by the screenreader as the menu is the main\n             * focus. This is useful with screenreaders that have\n             * \"read from top\" gestures that read the entire\n             * page from top to bottom when activated.\n             * This should be done before the animation starts\n             * so that users cannot accidentally scroll\n             * the content while dragging a menu open.\n             */\n            this.contentEl.setAttribute('aria-hidden', 'true');\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit({ role });\n        }\n    }\n    afterAnimation(isOpen, role) {\n        var _a;\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            /**\n             * When the menu is presented on an Android device, TalkBack's focus rings\n             * may appear in the wrong position due to the transition (specifically\n             * `transform` styles). The menu is hidden from screen readers during the\n             * transition to prevent this. Once the transition is complete, the menu\n             * is shown again.\n             */\n            if (isPlatform('android')) {\n                this.el.removeAttribute('aria-hidden');\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n            /**\n             * Move focus to the menu to prepare focus trapping, as long as\n             * it isn't already focused. Use the host element instead of the\n             * first descendant to avoid the scroll position jumping around.\n             */\n            const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n            if (focusedMenu !== this.el) {\n                this.el.focus();\n            }\n            // start focus trapping\n            document.addEventListener('focus', this.handleFocus, true);\n        }\n        else {\n            this.el.removeAttribute('aria-hidden');\n            // remove css classes and unhide content from screen readers\n            this.el.classList.remove(SHOW_MENU);\n            /**\n             * Remove tabindex from the menu component\n             * so that is cannot be tabbed to.\n             */\n            this.el.removeAttribute('tabindex');\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n                /**\n                 * Remove aria-hidden so screen readers\n                 * can announce the main content again\n                 * now that the menu is not the main focus.\n                 */\n                this.contentEl.removeAttribute('aria-hidden');\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit({ role });\n            // undo focus trapping so multiple menus don't collide\n            document.removeEventListener('focus', this.handleFocus, true);\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        /**\n         * If the menu is disabled but it is still open\n         * then we should close the menu immediately.\n         * Additionally, if the menu is in the process\n         * of animating {open, close} and the menu is disabled\n         * then it should still be closed immediately.\n         */\n        if (!isActive) {\n            /**\n             * It is possible to disable the menu while\n             * it is mid-animation. When this happens, we\n             * need to set the operationCancelled flag\n             * so that this._setOpen knows to return false\n             * and not run the \"afterAnimation\" callback.\n             */\n            if (this.isAnimating) {\n                this.operationCancelled = true;\n            }\n            /**\n             * If the menu is disabled then we should\n             * forcibly close the menu even if it is open.\n             */\n            this.afterAnimation(false, GESTURE);\n        }\n    }\n    render() {\n        const { type, disabled, el, isPaneVisible, inheritedAttributes, side } = this;\n        const mode = getIonMode(this);\n        /**\n         * If the Close Watcher is enabled then\n         * the ionBackButton listener in the menu controller\n         * will handle closing the menu when Escape is pressed.\n         */\n        return (h(Host, { key: 'a5c75aa40a34530b56ee3b98d706a5ac5ae300de', onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown, role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                [`menu-side-${side}`]: true,\n                'menu-pane-visible': isPaneVisible,\n                'split-pane-side': hostContext('ion-split-pane', el),\n            } }, h(\"div\", { key: '3f5f70acd4d3ed6bb445122f4f01d73db738a75f', class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", { key: '3161326c9330e7f7441299c428b87a91b31a83e9' })), h(\"ion-backdrop\", { key: '917b50f38489bdf03d0c642af8b4e4e172c7dc4c', ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n    }\n    get el() { return this; }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n    static get style() { return {\n        ios: menuIosCss,\n        md: menuMdCss\n    }; }\n}, [289, \"ion-menu\", {\n        \"contentId\": [513, \"content-id\"],\n        \"menuId\": [513, \"menu-id\"],\n        \"type\": [1025],\n        \"disabled\": [1028],\n        \"side\": [513],\n        \"swipeGesture\": [4, \"swipe-gesture\"],\n        \"maxEdgeStart\": [2, \"max-edge-start\"],\n        \"isPaneVisible\": [32],\n        \"isEndSide\": [32],\n        \"isOpen\": [64],\n        \"isActive\": [64],\n        \"open\": [64],\n        \"close\": [64],\n        \"toggle\": [64],\n        \"setOpen\": [64]\n    }, [[16, \"ionSplitPaneVisible\", \"onSplitPaneChanged\"], [2, \"click\", \"onBackdropClick\"]], {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }]);\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nfunction defineCustomElement$1() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-menu\", \"ion-backdrop\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-menu\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Menu);\n            }\n            break;\n        case \"ion-backdrop\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$2();\n            }\n            break;\n    } });\n}\n\nconst IonMenu = Menu;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonMenu, defineCustomElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}