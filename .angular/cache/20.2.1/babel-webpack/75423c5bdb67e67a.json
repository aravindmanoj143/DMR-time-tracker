{"ast":null,"code":"import _asyncToGenerator from \"/home/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, g as getElementRoot, e as renderHiddenInput } from './helpers.js';\nimport { a as printIonError, p as printIonWarning } from './index4.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { c as chevronDown, f as caretUpSharp, g as chevronForward, h as caretDownSharp, a as chevronBack } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { i as isBefore, a as isAfter, g as getPreviousMonth, b as getNextMonth, c as isSameDay, d as getDay, e as generateDayAriaLabel, v as validateParts, f as getPartsFromCalendarDay, h as getNextYear, j as getPreviousYear, k as getEndOfWeek, l as getStartOfWeek, m as getPreviousDay, n as getNextDay, o as getPreviousWeek, p as getNextWeek, q as parseMinParts, r as parseMaxParts, s as parseDate, w as warnIfValueOutOfBounds, t as parseAmPm, u as clampDate, x as convertToArrayOfNumbers, y as convertDataToISO, z as getToday, A as getClosestValidDate, B as generateMonths, C as getNumDaysInMonth, D as getCombinedDateColumnData, E as getMonthColumnData, F as getDayColumnData, G as getYearColumnData, H as isMonthFirstLocale, I as getTimeColumnsData, J as isLocaleDayPeriodRTL, K as calculateHourFromAMPM, L as getMonthAndYear, M as getDaysOfWeek, N as getDaysOfMonth, O as getHourCycle, P as getLocalizedTime, Q as getLocalizedDateTime, R as formatValue } from './data.js';\nimport { d as defineCustomElement$a } from './backdrop.js';\nimport { d as defineCustomElement$9 } from './button.js';\nimport { d as defineCustomElement$8 } from './buttons.js';\nimport { d as defineCustomElement$7 } from './icon.js';\nimport { d as defineCustomElement$6 } from './picker.js';\nimport { d as defineCustomElement$5 } from './picker-column.js';\nimport { d as defineCustomElement$4 } from './picker-column-option.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find(parts => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, {\n  minParts,\n  maxParts\n}) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if (minParts && isBefore(refParts, minParts) || maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(nextMonth, {\n    maxParts\n  });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nconst getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n  if (Array.isArray(highlightedDates)) {\n    const dateStringWithoutTime = dateIsoString.split('T')[0];\n    const matchingHighlight = highlightedDates.find(hd => hd.date === dateStringWithoutTime);\n    if (matchingHighlight) {\n      return {\n        textColor: matchingHighlight.textColor,\n        backgroundColor: matchingHighlight.backgroundColor,\n        border: matchingHighlight.border\n      };\n    }\n  } else {\n    /**\n     * Wrap in a try-catch to prevent exceptions in the user's function\n     * from interrupting the calendar's rendering.\n     */\n    try {\n      return highlightedDates(dateIsoString);\n    } catch (e) {\n      printIonError('[ion-datetime] - Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n    }\n  }\n  return undefined;\n};\n\n/**\n * If a time zone is provided in the format options, the rendered text could\n * differ from what was selected in the Datetime, which could cause\n * confusion.\n */\nconst warnIfTimeZoneProvided = (el, formatOptions) => {\n  var _a, _b, _c, _d;\n  if (((_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _a === void 0 ? void 0 : _a.timeZone) || ((_b = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _b === void 0 ? void 0 : _b.timeZoneName) || ((_c = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _c === void 0 ? void 0 : _c.timeZone) || ((_d = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _d === void 0 ? void 0 : _d.timeZoneName)) {\n    printIonWarning('[ion-datetime] - \"timeZone\" and \"timeZoneName\" are not supported in \"formatOptions\".', el);\n  }\n};\nconst checkForPresentationFormatMismatch = (el, presentation, formatOptions) => {\n  // formatOptions is not required\n  if (!formatOptions) return;\n  // If formatOptions is provided, the date and/or time objects are required, depending on the presentation\n  switch (presentation) {\n    case 'date':\n    case 'month-year':\n    case 'month':\n    case 'year':\n      if (formatOptions.date === undefined) {\n        printIonWarning(`[ion-datetime] - The '${presentation}' presentation requires a date object in formatOptions.`, el);\n      }\n      break;\n    case 'time':\n      if (formatOptions.time === undefined) {\n        printIonWarning(`[ion-datetime] - The 'time' presentation requires a time object in formatOptions.`, el);\n      }\n      break;\n    case 'date-time':\n    case 'time-date':\n      if (formatOptions.date === undefined && formatOptions.time === undefined) {\n        printIonWarning(`[ion-datetime] - The '${presentation}' presentation requires either a date or time object (or both) in formatOptions.`, el);\n      }\n      break;\n  }\n};\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-button{--background:transparent}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:not(.calendar-day-adjacent-day):focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, var(--ion-background-color-step-300, #edeef0));color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons .calendar-month-year-toggle{color:var(--ion-color-base)}.calendar-month-year{min-width:0}.calendar-month-year-toggle{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;position:relative;border:0;outline:none;background:transparent;cursor:pointer;z-index:1}.calendar-month-year-toggle::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;-webkit-transition:opacity 15ms linear, background-color 15ms linear;transition:opacity 15ms linear, background-color 15ms linear;z-index:-1}.calendar-month-year-toggle.ion-focused::after{background:currentColor}.calendar-month-year-toggle:disabled{opacity:0.3;pointer-events:none}.calendar-month-year-toggle ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0;-ms-flex-negative:0;flex-shrink:0}.calendar-month-year-toggle #toggle-wrapper{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}ion-picker{--highlight-background:var(--wheel-highlight-background);--highlight-border-radius:var(--wheel-highlight-border-radius);--fade-background-rgb:var(--wheel-fade-background-rgb)}:host{--background:var(--ion-color-light, #f4f5f8);--background-rgb:var(--ion-color-light-rgb, 244, 245, 248);--title-color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, var(--ion-background-color-step-200, #cccccc));font-size:min(0.875rem, 22.4px)}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}.calendar-month-year-toggle{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:0px;padding-bottom:0px;min-height:44px;font-size:min(1rem, 25.6px);font-weight:600}.calendar-month-year-toggle.ion-focused::after{opacity:0.15}.calendar-month-year-toggle #toggle-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:10px;margin-bottom:10px}:host .calendar-action-buttons .calendar-month-year-toggle ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, var(--ion-text-color-step-700, #b3b3b3));font-size:min(0.75rem, 19.2px);font-weight:600;line-height:24px;text-transform:uppercase}@supports (border-radius: mod(1px, 1px)){.calendar-days-of-week .day-of-week{width:clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);height:24px;overflow:hidden}.calendar-day{border-radius:max(8px, mod(min(1rem, 24px), 24px) * 10)}}@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))){.calendar-days-of-week .day-of-week{width:auto;height:auto;overflow:initial}.calendar-day{border-radius:32px}}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-ms-flex-align:center;align-items:center;height:calc(100% - 16px)}:host .calendar-day-wrapper{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;height:0;min-height:1rem}:host .calendar-day{width:40px;min-width:40px;height:40px;font-size:min(1.25rem, 32px)}.calendar-day.calendar-day-active{background:rgba(var(--ion-color-base-rgb), 0.2);font-size:min(1.375rem, 35.2px)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active,:host .calendar-day.calendar-day-adjacent-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-adjacent-day{color:var(--ion-color-step-300, var(--ion-text-color-step-700, #b3b3b3))}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:16px;font-size:min(1rem, 25.6px)}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, var(--ion-background-color-step-200, #cccccc))}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-button{--background:transparent}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:not(.calendar-day-adjacent-day):focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, var(--ion-background-color-step-300, #edeef0));color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons .calendar-month-year-toggle{color:var(--ion-color-base)}.calendar-month-year{min-width:0}.calendar-month-year-toggle{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;position:relative;border:0;outline:none;background:transparent;cursor:pointer;z-index:1}.calendar-month-year-toggle::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;-webkit-transition:opacity 15ms linear, background-color 15ms linear;transition:opacity 15ms linear, background-color 15ms linear;z-index:-1}.calendar-month-year-toggle.ion-focused::after{background:currentColor}.calendar-month-year-toggle:disabled{opacity:0.3;pointer-events:none}.calendar-month-year-toggle ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0;-ms-flex-negative:0;flex-shrink:0}.calendar-month-year-toggle #toggle-wrapper{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}ion-picker{--highlight-background:var(--wheel-highlight-background);--highlight-border-radius:var(--wheel-highlight-border-radius);--fade-background-rgb:var(--wheel-fade-background-rgb)}:host{--background:var(--ion-color-step-100, var(--ion-background-color-step-100, #ffffff));--title-color:var(--ion-color-contrast)}:host .datetime-header{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}:host .datetime-header .datetime-title{font-size:0.75rem;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:2.125rem}:host .calendar-action-buttons ion-button{--color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959))}.calendar-month-year-toggle{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:12px;padding-bottom:12px;min-height:48px;background:transparent;color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959));z-index:1}.calendar-month-year-toggle.ion-focused::after{opacity:0.04}.calendar-month-year-toggle ion-ripple-effect{color:currentColor}@media (any-hover: hover){.calendar-month-year-toggle.ion-activatable:not(.ion-focused):hover::after{background:currentColor;opacity:0.04}}:host .calendar-days-of-week{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, var(--ion-text-color-step-500, gray));font-size:0.875rem;line-height:36px}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}:host .calendar-day{width:42px;min-width:42px;height:42px;font-size:0.875rem}:host .calendar-day.calendar-day-today{border:1px solid var(--ion-color-base);color:var(--ion-color-base)}:host .calendar-day.calendar-day-active,:host .calendar-day.calendar-day-adjacent-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active,.calendar-day.calendar-day-active:focus{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .calendar-day.calendar-day-adjacent-day{color:var(--ion-color-step-500, var(--ion-text-color-step-500, gray))}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:8px}:host .time-header{color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959))}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}\";\nconst Datetime = /*@__PURE__*/proxyCustomElement(class Datetime extends HTMLElement {\n  constructor() {\n    var _this;\n    super();\n    _this = this;\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.prevPresentation = null;\n    this.showMonthAndYear = false;\n    this.activeParts = [];\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n      isAdjacentDay: false\n    };\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but the selected date cannot be changed.\n     */\n    this.readonly = false;\n    /**\n     * If `true`, the datetime calendar displays a six-week (42-day) layout,\n     * including days from the previous and next months to fill the grid.\n     * These adjacent days are selectable unless disabled.\n     */\n    this.showAdjacentDays = false;\n    /**\n     * Which values you want to select. `\"date\"` will show\n     * a calendar picker to select the month, day, and year. `\"time\"`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `\"date-time\"` will show the date picker first and time picker second.\n     * `\"time-date\"` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `\"default\"` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n    this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. This will include both the slotted title, and\n     * the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `\"date\"`, `\"date-time\"`, or `\"time-date\"`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `\"time\"`, `\"month\"`, `\"month-year\"`, or `\"year\"`.\n     */\n    this.preferWheel = false;\n    this.warnIfIncorrectValueUsage = () => {\n      const {\n        multiple,\n        value\n      } = this;\n      if (!multiple && Array.isArray(value)) {\n        /**\n         * We do some processing on the `value` array so\n         * that it looks more like an array when logged to\n         * the console.\n         * Example given ['a', 'b']\n         * Default toString() behavior: a,b\n         * Custom behavior: ['a', 'b']\n         */\n        printIonWarning(`[ion-datetime] - An array of values was passed, but multiple is \"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map(v => `'${v}'`).join(', ')}]\n`, this.el);\n      }\n    };\n    this.setValue = value => {\n      this.value = value;\n      this.ionChange.emit({\n        value\n      });\n    };\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date and then\n     * falling back to defaultParts if no active date\n     * is selected.\n     */\n    this.getActivePartsWithFallback = () => {\n      var _a;\n      const {\n        defaultParts\n      } = this;\n      return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    this.getActivePart = () => {\n      const {\n        activeParts\n      } = this;\n      return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n    };\n    this.closeParentOverlay = role => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss(undefined, role);\n      }\n    };\n    this.setWorkingParts = parts => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      /** if the datetime component is in readonly mode,\n       * allow browsing of the calendar without changing\n       * the set value\n       */\n      if (this.readonly) {\n        return;\n      }\n      const {\n        multiple,\n        minParts,\n        maxParts,\n        activeParts\n      } = this;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      const validatedParts = validateParts(parts, minParts, maxParts);\n      this.setWorkingParts(validatedParts);\n      if (multiple) {\n        const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter(p => !isSameDay(p, validatedParts));\n        } else {\n          this.activeParts = [...activePartsArray, validatedParts];\n        }\n      } else {\n        this.activeParts = Object.assign({}, validatedParts);\n      }\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = ev => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, {\n        attributeFilter: ['class'],\n        attributeOldValue: true\n      });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', ev => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = currentMonth => {\n      /**\n       * Get the number of offset days so\n       * we know how much to offset our next selector by\n       * to grab the correct calendar-day element.\n       */\n      const {\n        day,\n        month,\n        year\n      } = this.workingParts;\n      const firstOfMonth = new Date(`${month}/1/${year}`).getDay();\n      const offset = firstOfMonth >= this.firstDayOfWeek ? firstOfMonth - this.firstDayOfWeek : 7 - (this.firstDayOfWeek - firstOfMonth);\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${offset + day}) .calendar-day`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const {\n        min,\n        defaultParts\n      } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, defaultParts);\n    };\n    this.processMaxParts = () => {\n      const {\n        max,\n        defaultParts\n      } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = parts => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          /**\n           * If the current scroll position is all the way to the left\n           * then we have scrolled to the previous month.\n           * Otherwise, assume that we have scrolled to the next\n           * month. We have a tolerance of 2px to account for\n           * sub pixel rendering.\n           *\n           * Check below the next line ensures that we did not\n           * swipe and abort (i.e. we swiped but we are still on the current month).\n           */\n          const condition = isRTL(this.el) ? calendarBodyRef.scrollLeft >= -2 : calendarBodyRef.scrollLeft <= 2;\n          const month = condition ? startMonth : endMonth;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2) return;\n          /**\n           * If we're force-rendering a month, assume we've\n           * scrolled to that and return it.\n           *\n           * If forceRenderDate is ever used in a context where the\n           * forced month is not immediately auto-scrolled to, this\n           * should be updated to also check whether `month` has the\n           * same month and year as the forced date.\n           */\n          const {\n            forceRenderDate\n          } = this;\n          if (forceRenderDate !== undefined) {\n            return {\n              month: forceRenderDate.month,\n              year: forceRenderDate.year,\n              day: forceRenderDate.day\n            };\n          }\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          } else if (month === endMonth) {\n            return getNextMonth(parts);\n          } else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate) return;\n          const {\n            month,\n            day,\n            year\n          } = newDate;\n          if (isMonthDisabled({\n            month,\n            year,\n            day: null\n          }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), {\n              day: null\n            }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), {\n              day: null\n            })\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n              month,\n              day: day,\n              year\n            }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n            if (this.resolveForceDateScrolling) {\n              this.resolveForceDateScrolling();\n            }\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const {\n        destroyCalendarListener,\n        destroyKeyboardMO\n      } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = value => {\n      const hasValue = value !== null && value !== undefined && value !== '' && (!Array.isArray(value) || value.length > 0);\n      const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n      const {\n        minParts,\n        maxParts,\n        workingParts,\n        el\n      } = this;\n      this.warnIfIncorrectValueUsage();\n      /**\n       * Return early if the value wasn't parsed correctly, such as\n       * if an improperly formatted date string was provided.\n       */\n      if (!valueToProcess) {\n        return;\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, clamp to the last one.\n       * This is because the last value is the one that the user\n       * has most recently interacted with.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[valueToProcess.length - 1] : valueToProcess;\n      const targetValue = clampDate(singleValue, minParts, maxParts);\n      const {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      } = targetValue;\n      const ampm = parseAmPm(hour);\n      /**\n       * Since `activeParts` indicates a value that been explicitly selected\n       * either by the user or the app, only update `activeParts` if the\n       * `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          this.activeParts = [...valueToProcess];\n        } else {\n          this.activeParts = {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm\n          };\n        }\n      } else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        this.activeParts = [];\n      }\n      const didChangeMonth = month !== undefined && month !== workingParts.month || year !== undefined && year !== workingParts.year;\n      const bodyIsVisible = el.classList.contains('datetime-ready');\n      const {\n        isGridStyle,\n        showMonthAndYear\n      } = this;\n      if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n        /**\n         * Only animate if:\n         * 1. We're using grid style (wheel style pickers should just jump to new value)\n         * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n         * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n         * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n         */\n        this.animateToDate(targetValue);\n      } else {\n        this.setWorkingParts({\n          month,\n          day,\n          year,\n          hour,\n          minute,\n          ampm\n        });\n      }\n    };\n    this.animateToDate = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (targetValue) {\n        const {\n          workingParts\n        } = _this;\n        /**\n         * Tell other render functions that we need to force the\n         * target month to appear in place of the actual next/prev month.\n         * Because this is a State variable, a rerender will be triggered\n         * automatically, updating the rendered months.\n         */\n        _this.forceRenderDate = targetValue;\n        /**\n         * Flag that we've started scrolling to the forced date.\n         * The resolve function will be called by the datetime's\n         * scroll listener when it's done updating everything.\n         * This is a replacement for making prev/nextMonth async,\n         * since the logic we're waiting on is in a listener.\n         */\n        const forceDateScrollingPromise = new Promise(resolve => {\n          _this.resolveForceDateScrolling = resolve;\n        });\n        /**\n         * Animate smoothly to the forced month. This will also update\n         * workingParts and correct the surrounding months for us.\n         */\n        const targetMonthIsBefore = isBefore(targetValue, workingParts);\n        targetMonthIsBefore ? _this.prevMonth() : _this.nextMonth();\n        yield forceDateScrollingPromise;\n        _this.resolveForceDateScrolling = undefined;\n        _this.forceRenderDate = undefined;\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null;\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth'\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  formatOptionsChanged() {\n    const {\n      el,\n      formatOptions,\n      presentation\n    } = this;\n    checkForPresentationFormatMismatch(el, presentation, formatOptions);\n    warnIfTimeZoneProvided(el, formatOptions);\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  presentationChanged() {\n    const {\n      el,\n      formatOptions,\n      presentation\n    } = this;\n    checkForPresentationFormatMismatch(el, presentation, formatOptions);\n  }\n  get isGridStyle() {\n    const {\n      presentation,\n      preferWheel\n    } = this;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    return hasDatePresentation && !preferWheel;\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        value\n      } = _this2;\n      if (_this2.hasValue()) {\n        _this2.processValue(value);\n      }\n      _this2.emitStyle();\n      _this2.ionValueChange.emit({\n        value\n      });\n    })();\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   *\n   * @param closeOverlay If `true`, closes the parent overlay. Defaults to `false`.\n   */\n  confirm() {\n    var _this3 = this;\n    return _asyncToGenerator(function* (closeOverlay = false) {\n      const {\n        isCalendarPicker,\n        activeParts,\n        preferWheel,\n        workingParts\n      } = _this3;\n      /**\n       * We only update the value if the presentation is not a calendar picker.\n       */\n      if (activeParts !== undefined || !isCalendarPicker) {\n        const activePartsIsArray = Array.isArray(activeParts);\n        if (activePartsIsArray && activeParts.length === 0) {\n          if (preferWheel) {\n            /**\n             * If the datetime is using a wheel picker, but the\n             * active parts are empty, then the user has confirmed the\n             * initial value (working parts) presented to them.\n             */\n            _this3.setValue(convertDataToISO(workingParts));\n          } else {\n            _this3.setValue(undefined);\n          }\n        } else {\n          _this3.setValue(convertDataToISO(activeParts));\n        }\n      }\n      if (closeOverlay) {\n        _this3.closeParentOverlay(CONFIRM_ROLE);\n      }\n    }).apply(this, arguments);\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   *\n   * @param startDate A valid [ISO-8601 string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format) to reset the datetime state to.\n   */\n  reset(startDate) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.processValue(startDate);\n    })();\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   *\n   * @param closeOverlay If `true`, closes the parent overlay. Defaults to `false`.\n   */\n  cancel() {\n    var _this5 = this;\n    return _asyncToGenerator(function* (closeOverlay = false) {\n      _this5.ionCancel.emit();\n      if (closeOverlay) {\n        _this5.closeParentOverlay(CANCEL_ROLE);\n      }\n    }).apply(this, arguments);\n  }\n  get isCalendarPicker() {\n    const {\n      presentation\n    } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    const {\n      el,\n      intersectionTrackerRef\n    } = this;\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = entries => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO FW-2793: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, {\n      threshold: 0.01,\n      root: el\n    });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(intersectionTrackerRef));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = entries => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, {\n      threshold: 0,\n      root: el\n    });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(intersectionTrackerRef));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', ev => ev.stopPropagation());\n    root.addEventListener('ionBlur', ev => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const {\n      presentation,\n      prevPresentation,\n      calendarBodyRef,\n      minParts,\n      preferWheel,\n      forceRenderDate\n    } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      /**\n       * We need to make sure the datetime is not in the process\n       * of scrolling to a new datetime value if the value\n       * is updated programmatically.\n       * Otherwise, the datetime will appear to not scroll at all because\n       * we are resetting the scroll position to the center of the view.\n       * Prior to the datetime's value being updated programmatically,\n       * the calendarBodyRef is scrolled such that the middle month is centered\n       * in the view. The below code updates the scroll position so the middle\n       * month is also centered in the view. Since the scroll position did not change,\n       * the scroll callback in this file does not fire,\n       * and the resolveForceDateScrolling promise never resolves.\n       */\n      if (workingMonth && forceRenderDate === undefined) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const {\n      el,\n      formatOptions,\n      highlightedDates,\n      multiple,\n      presentation,\n      preferWheel\n    } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('[ion-datetime] - Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('[ion-datetime] - Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    if (highlightedDates !== undefined) {\n      if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n        printIonWarning('[ion-datetime] - The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n      }\n      if (preferWheel) {\n        printIonWarning('[ion-datetime] - The highlightedDates property is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    if (formatOptions) {\n      checkForPresentationFormatMismatch(el, presentation, formatOptions);\n      warnIfTimeZoneProvided(el, formatOptions);\n    }\n    const hourValues = this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    const minuteValues = this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    const monthValues = this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    const yearValues = this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    const dayValues = this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    const todayParts = this.todayParts = parseDate(getToday());\n    this.processMinParts();\n    this.processMaxParts();\n    this.defaultParts = getClosestValidDate({\n      refParts: todayParts,\n      monthValues,\n      dayValues,\n      yearValues,\n      hourValues,\n      minuteValues,\n      minParts: this.minParts,\n      maxParts: this.maxParts\n    });\n    this.processValue(this.value);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const {\n      disabled,\n      readonly,\n      showDefaultButtons,\n      showClearButton\n    } = this;\n    /**\n     * The cancel, clear, and confirm buttons\n     * should not be interactive if the datetime\n     * is disabled or readonly.\n     */\n    const isButtonDisabled = disabled || readonly;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.setValue(undefined);\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return h(\"div\", {\n      class: \"datetime-footer\"\n    }, h(\"div\", {\n      class: \"datetime-buttons\"\n    }, h(\"div\", {\n      class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton\n      }\n    }, h(\"slot\", {\n      name: \"buttons\"\n    }, h(\"ion-buttons\", null, showDefaultButtons && h(\"ion-button\", {\n      id: \"cancel-button\",\n      color: this.color,\n      onClick: () => this.cancel(true),\n      disabled: isButtonDisabled\n    }, this.cancelText), h(\"div\", {\n      class: \"datetime-action-buttons-container\"\n    }, showClearButton && h(\"ion-button\", {\n      id: \"clear-button\",\n      color: this.color,\n      onClick: () => clearButtonClick(),\n      disabled: isButtonDisabled\n    }, this.clearText), showDefaultButtons && h(\"ion-button\", {\n      id: \"confirm-button\",\n      color: this.color,\n      onClick: () => this.confirm(true),\n      disabled: isButtonDisabled\n    }, this.doneText)))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date' ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)] : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date' ? this.renderCombinedDatePickerColumn() : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const {\n      defaultParts,\n      disabled,\n      workingParts,\n      locale,\n      minParts,\n      maxParts,\n      todayParts,\n      isDateEnabled\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    const lastMonth = monthsToRender[monthsToRender.length - 1];\n    /**\n     * Ensure that users can select the entire window of dates.\n     */\n    monthsToRender[0].day = 1;\n    lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n    /**\n     * Narrow the dates rendered based on min/max dates (if any).\n     * The `min` date is used if the min is after the generated min month.\n     * The `max` date is used if the max is before the generated max month.\n     * This ensures that the sliding window always stays at 3 months\n     * but still allows future dates to be lazily rendered based on any min/max\n     * constraints.\n     */\n    const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n    const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n    const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('[ion-datetime] - Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), {\n          disabled\n        });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, set it to the default date.\n     */\n    const todayString = workingParts.day !== null ? `${workingParts.year}-${workingParts.month}-${workingParts.day}` : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n    return h(\"ion-picker-column\", {\n      \"aria-label\": \"Select a date\",\n      class: \"date-column\",\n      color: this.color,\n      disabled: disabled,\n      value: todayString,\n      onIonChange: ev => {\n        const {\n          value\n        } = ev.detail;\n        const findPart = parts.find(({\n          month,\n          day,\n          year\n        }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n        ev.stopPropagation();\n      }\n    }, items.map(item => h(\"ion-picker-column-option\", {\n      part: item.value === todayString ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART,\n      key: item.value,\n      disabled: item.disabled,\n      value: item.value\n    }, item.text)));\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const {\n      workingParts,\n      isDateEnabled\n    } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues) : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues) : [];\n    if (isDateEnabled) {\n      days = days.map(dayObject => {\n        const {\n          value\n        } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('[ion-datetime] - Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), {\n          disabled\n        });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues) : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, {\n      month: 'numeric',\n      day: 'numeric'\n    });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [this.renderMonthPickerColumn(months), this.renderDayPickerColumn(days), this.renderYearPickerColumn(years)];\n    } else {\n      renderArray = [this.renderDayPickerColumn(days), this.renderMonthPickerColumn(months), this.renderYearPickerColumn(years)];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const {\n      disabled,\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    const pickerColumnValue = (_a = workingParts.day !== null ? workingParts.day : this.defaultParts.day) !== null && _a !== void 0 ? _a : undefined;\n    return h(\"ion-picker-column\", {\n      \"aria-label\": \"Select a day\",\n      class: \"day-column\",\n      color: this.color,\n      disabled: disabled,\n      value: pickerColumnValue,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          day: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          day: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    }, days.map(day => h(\"ion-picker-column-option\", {\n      part: day.value === pickerColumnValue ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART,\n      key: day.value,\n      disabled: day.disabled,\n      value: day.value\n    }, day.text)));\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const {\n      disabled,\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column\", {\n      \"aria-label\": \"Select a month\",\n      class: \"month-column\",\n      color: this.color,\n      disabled: disabled,\n      value: workingParts.month,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          month: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          month: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    }, months.map(month => h(\"ion-picker-column-option\", {\n      part: month.value === workingParts.month ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART,\n      key: month.value,\n      disabled: month.disabled,\n      value: month.value\n    }, month.text)));\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const {\n      disabled,\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column\", {\n      \"aria-label\": \"Select a year\",\n      class: \"year-column\",\n      color: this.color,\n      disabled: disabled,\n      value: workingParts.year,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          year: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          year: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    }, years.map(year => h(\"ion-picker-column-option\", {\n      part: year.value === workingParts.year ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART,\n      key: year.value,\n      disabled: year.disabled,\n      value: year.value\n    }, year.text)));\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    /**\n     * If a user has not selected a date,\n     * then we should show all times. If the\n     * user has selected a date (even if it has\n     * not been confirmed yet), we should apply\n     * the max and min restrictions so that the\n     * time picker shows values that are\n     * appropriate for the selected date.\n     */\n    const activePart = this.getActivePart();\n    const userHasSelectedDate = activePart !== undefined;\n    const {\n      hoursData,\n      minutesData,\n      dayPeriodData\n    } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [this.renderHourPickerColumn(hoursData), this.renderMinutePickerColumn(minutesData), this.renderDayPeriodPickerColumn(dayPeriodData)];\n  }\n  renderHourPickerColumn(hoursData) {\n    const {\n      disabled,\n      workingParts\n    } = this;\n    if (hoursData.length === 0) return [];\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column\", {\n      \"aria-label\": \"Select an hour\",\n      color: this.color,\n      disabled: disabled,\n      value: activePart.hour,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          hour: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, this.getActivePartsWithFallback()), {\n          hour: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    }, hoursData.map(hour => h(\"ion-picker-column-option\", {\n      part: hour.value === activePart.hour ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART,\n      key: hour.value,\n      disabled: hour.disabled,\n      value: hour.value\n    }, hour.text)));\n  }\n  renderMinutePickerColumn(minutesData) {\n    const {\n      disabled,\n      workingParts\n    } = this;\n    if (minutesData.length === 0) return [];\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column\", {\n      \"aria-label\": \"Select a minute\",\n      color: this.color,\n      disabled: disabled,\n      value: activePart.minute,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          minute: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, this.getActivePartsWithFallback()), {\n          minute: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    }, minutesData.map(minute => h(\"ion-picker-column-option\", {\n      part: minute.value === activePart.minute ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART,\n      key: minute.value,\n      disabled: minute.disabled,\n      value: minute.value\n    }, minute.text)));\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const {\n      disabled,\n      workingParts\n    } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const activePart = this.getActivePartsWithFallback();\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return h(\"ion-picker-column\", {\n      \"aria-label\": \"Select a day period\",\n      style: isDayPeriodRTL ? {\n        order: '-1'\n      } : {},\n      color: this.color,\n      disabled: disabled,\n      value: activePart.ampm,\n      onIonChange: ev => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          ampm: ev.detail.value,\n          hour\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, this.getActivePartsWithFallback()), {\n          ampm: ev.detail.value,\n          hour\n        }));\n        ev.stopPropagation();\n      }\n    }, dayPeriodData.map(dayPeriod => h(\"ion-picker-column-option\", {\n      part: dayPeriod.value === activePart.ampm ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART,\n      key: dayPeriod.value,\n      disabled: dayPeriod.disabled,\n      value: dayPeriod.value\n    }, dayPeriod.text)));\n  }\n  renderWheelView(forcePresentation) {\n    const {\n      locale\n    } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return h(\"div\", {\n      class: {\n        [`wheel-order-${columnOrder}`]: true\n      }\n    }, this.renderWheelPicker(forcePresentation));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const {\n      disabled\n    } = this;\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = disabled || isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = disabled || isNextMonthDisabled(this.workingParts, this.maxParts);\n    // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n    const hostDir = this.el.getAttribute('dir') || undefined;\n    return h(\"div\", {\n      class: \"calendar-header\"\n    }, h(\"div\", {\n      class: \"calendar-action-buttons\"\n    }, h(\"div\", {\n      class: \"calendar-month-year\"\n    }, h(\"button\", {\n      class: {\n        'calendar-month-year-toggle': true,\n        'ion-activatable': true,\n        'ion-focusable': true\n      },\n      part: \"month-year-button\",\n      disabled: disabled,\n      \"aria-label\": this.showMonthAndYear ? 'Hide year picker' : 'Show year picker',\n      onClick: () => this.toggleMonthAndYearView()\n    }, h(\"span\", {\n      id: \"toggle-wrapper\"\n    }, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", {\n      \"aria-hidden\": \"true\",\n      icon: this.showMonthAndYear ? expandedIcon : collapsedIcon,\n      lazy: false,\n      flipRtl: true\n    })), mode === 'md' && h(\"ion-ripple-effect\", null))), h(\"div\", {\n      class: \"calendar-next-prev\"\n    }, h(\"ion-buttons\", null, h(\"ion-button\", {\n      \"aria-label\": \"Previous month\",\n      disabled: prevMonthDisabled,\n      onClick: () => this.prevMonth()\n    }, h(\"ion-icon\", {\n      dir: hostDir,\n      \"aria-hidden\": \"true\",\n      slot: \"icon-only\",\n      icon: chevronBack,\n      lazy: false,\n      flipRtl: true\n    })), h(\"ion-button\", {\n      \"aria-label\": \"Next month\",\n      disabled: nextMonthDisabled,\n      onClick: () => this.nextMonth()\n    }, h(\"ion-icon\", {\n      dir: hostDir,\n      \"aria-hidden\": \"true\",\n      slot: \"icon-only\",\n      icon: chevronForward,\n      lazy: false,\n      flipRtl: true\n    }))))), h(\"div\", {\n      class: \"calendar-days-of-week\",\n      \"aria-hidden\": \"true\"\n    }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(d => {\n      return h(\"div\", {\n        class: \"day-of-week\"\n      }, d);\n    })));\n  }\n  renderMonth(month, year) {\n    const {\n      disabled,\n      readonly\n    } = this;\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const isDatetimeDisabled = disabled || readonly;\n    const swipeDisabled = disabled || isMonthDisabled({\n      month,\n      year,\n      day: null\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), {\n        day: null\n      }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), {\n        day: null\n      })\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"div\", {\n      \"aria-hidden\": !isWorkingMonth ? 'true' : null,\n      class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled\n      }\n    }, h(\"div\", {\n      class: \"calendar-month-grid\"\n    }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7, this.showAdjacentDays).map((dateObject, index) => {\n      const {\n        day,\n        dayOfWeek,\n        isAdjacentDay\n      } = dateObject;\n      const {\n        el,\n        highlightedDates,\n        isDateEnabled,\n        multiple,\n        showAdjacentDays\n      } = this;\n      let _month = month;\n      let _year = year;\n      if (showAdjacentDays && isAdjacentDay && day !== null) {\n        if (day > 20) {\n          // Leading with the adjacent day from the previous month\n          // if its a adjacent day and is higher than '20' (last week even in feb)\n          if (month === 1) {\n            _year = year - 1;\n            _month = 12;\n          } else {\n            _month = month - 1;\n          }\n        } else if (day < 15) {\n          // Leading with the adjacent day from the next month\n          // if its a adjacent day and is lower than '15' (first two weeks)\n          if (month === 12) {\n            _year = year + 1;\n            _month = 1;\n          } else {\n            _month = month + 1;\n          }\n        }\n      }\n      const referenceParts = {\n        month: _month,\n        day,\n        year: _year,\n        isAdjacentDay\n      };\n      const isCalendarPadding = day === null;\n      const {\n        isActive,\n        isToday,\n        ariaLabel,\n        ariaSelected,\n        disabled: isDayDisabled,\n        text\n      } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      const dateIsoString = convertDataToISO(referenceParts);\n      let isCalDayDisabled = isCalMonthDisabled || isDayDisabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(dateIsoString);\n        } catch (e) {\n          printIonError('[ion-datetime] - Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n        }\n      }\n      /**\n       * Some days are constrained through max & min or allowed dates\n       * and also disabled because the component is readonly or disabled.\n       * These need to be displayed differently.\n       */\n      const isCalDayConstrained = isCalDayDisabled && isDatetimeDisabled;\n      const isButtonDisabled = isCalDayDisabled || isDatetimeDisabled;\n      let dateStyle = undefined;\n      /**\n       * Custom highlight styles should not override the style for selected dates,\n       * nor apply to \"filler days\" at the start of the grid.\n       */\n      if (highlightedDates !== undefined && !isActive && day !== null && !isAdjacentDay) {\n        dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n      }\n      let dateParts = undefined;\n      // \"Filler days\" at the beginning of the grid should not get the calendar day\n      // CSS parts added to them\n      if (!isCalendarPadding && !isAdjacentDay) {\n        dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n      } else if (isAdjacentDay) {\n        dateParts = `calendar-day${isCalDayDisabled ? ' disabled' : ''}`;\n      }\n      return h(\"div\", {\n        class: \"calendar-day-wrapper\"\n      }, h(\"button\", {\n        // We need to use !important for the inline styles here because\n        // otherwise the CSS shadow parts will override these styles.\n        // See https://github.com/WICG/webcomponents/issues/847\n        // Both the CSS shadow parts and highlightedDates styles are\n        // provided by the developer, but highlightedDates styles should\n        // always take priority.\n        ref: el => {\n          if (el) {\n            el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n            el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n            el.style.setProperty('border', `${dateStyle ? dateStyle.border : ''}`, 'important');\n          }\n        },\n        tabindex: \"-1\",\n        \"data-day\": day,\n        \"data-month\": _month,\n        \"data-year\": _year,\n        \"data-index\": index,\n        \"data-day-of-week\": dayOfWeek,\n        disabled: isButtonDisabled,\n        class: {\n          'calendar-day-padding': isCalendarPadding,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-constrained': isCalDayConstrained,\n          'calendar-day-today': isToday,\n          'calendar-day-adjacent-day': isAdjacentDay\n        },\n        part: dateParts,\n        \"aria-hidden\": isCalendarPadding ? 'true' : null,\n        \"aria-selected\": ariaSelected,\n        \"aria-label\": ariaLabel,\n        onClick: () => {\n          if (isCalendarPadding) {\n            return;\n          }\n          if (isAdjacentDay) {\n            // The user selected a day outside the current month. Ignore this button, as the month will be re-rendered.\n            this.el.blur();\n            this.activeParts = Object.assign(Object.assign({}, activePart), referenceParts);\n            this.animateToDate(referenceParts);\n            this.confirm();\n          } else {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), referenceParts));\n            // Multiple only needs date info so we can wipe out other fields like time.\n            if (multiple) {\n              this.setActiveParts(referenceParts, isActive);\n            } else {\n              this.setActiveParts(Object.assign(Object.assign({}, activePart), referenceParts));\n            }\n          }\n        }\n      }, text));\n    })));\n  }\n  renderCalendarBody() {\n    return h(\"div\", {\n      class: \"calendar-body ion-focusable\",\n      ref: el => this.calendarBodyRef = el,\n      tabindex: \"0\"\n    }, generateMonths(this.workingParts, this.forceRenderDate).map(({\n      month,\n      year\n    }) => {\n      return this.renderMonth(month, year);\n    }));\n  }\n  renderCalendar(mode) {\n    return h(\"div\", {\n      class: \"datetime-calendar\",\n      key: \"datetime-calendar\"\n    }, this.renderCalendarHeader(mode), this.renderCalendarBody());\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", {\n      name: \"time-label\"\n    }, \"Time\");\n  }\n  renderTimeOverlay() {\n    var _this6 = this;\n    const {\n      disabled,\n      hourCycle,\n      isTimePopoverOpen,\n      locale,\n      formatOptions\n    } = this;\n    const computedHourCycle = getHourCycle(locale, hourCycle);\n    const activePart = this.getActivePartsWithFallback();\n    return [h(\"div\", {\n      class: \"time-header\"\n    }, this.renderTimeLabel()), h(\"button\", {\n      class: {\n        'time-body': true,\n        'time-body-active': isTimePopoverOpen\n      },\n      part: `time-button${isTimePopoverOpen ? ' active' : ''}`,\n      \"aria-expanded\": \"false\",\n      \"aria-haspopup\": \"true\",\n      disabled: disabled,\n      onClick: function () {\n        var _ref2 = _asyncToGenerator(function* (ev) {\n          const {\n            popoverRef\n          } = _this6;\n          if (popoverRef) {\n            _this6.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target\n              }\n            }));\n            yield popoverRef.onWillDismiss();\n            _this6.isTimePopoverOpen = false;\n          }\n        });\n        return function onClick(_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    }, getLocalizedTime(locale, activePart, computedHourCycle, formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time)), h(\"ion-popover\", {\n      alignment: \"center\",\n      translucent: true,\n      overlayIndex: 1,\n      arrow: false,\n      onWillPresent: ev => {\n        /**\n         * Intersection Observers do not consistently fire between Blink and Webkit\n         * when toggling the visibility of the popover and trying to scroll the picker\n         * column to the correct time value.\n         *\n         * This will correctly scroll the element position to the correct time value,\n         * before the popover is fully presented.\n         */\n        const cols = ev.target.querySelectorAll('ion-picker-column');\n        // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n        cols.forEach(col => col.scrollActiveItemIntoView());\n      },\n      style: {\n        '--offset-y': '-10px',\n        '--min-width': 'fit-content'\n      },\n      // Allow native browser keyboard events to support up/down/home/end key\n      // navigation within the time picker.\n      keyboardEvents: true,\n      ref: el => this.popoverRef = el\n    }, this.renderWheelPicker('time'))];\n  }\n  getHeaderSelectedDateText() {\n    var _a;\n    const {\n      activeParts,\n      formatOptions,\n      multiple,\n      titleSelectedDatesFormatter\n    } = this;\n    const isArray = Array.isArray(activeParts);\n    let headerText;\n    if (multiple && isArray && activeParts.length !== 1) {\n      headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n      if (titleSelectedDatesFormatter !== undefined) {\n        try {\n          headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n        } catch (e) {\n          printIonError('[ion-datetime] - Exception in provided `titleSelectedDatesFormatter`:', e);\n        }\n      }\n    } else {\n      // for exactly 1 day selected (multiple set or not), show a formatted version of that\n      headerText = getLocalizedDateTime(this.locale, this.getActivePartsWithFallback(), (_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) !== null && _a !== void 0 ? _a : {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric'\n      });\n    }\n    return headerText;\n  }\n  renderHeader(showExpandedHeader = true) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return h(\"div\", {\n      class: \"datetime-header\"\n    }, h(\"div\", {\n      class: \"datetime-title\"\n    }, h(\"slot\", {\n      name: \"title\"\n    }, \"Select Date\")), showExpandedHeader && h(\"div\", {\n      class: \"datetime-selected-date\"\n    }, this.getHeaderSelectedDateText()));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const {\n      presentation\n    } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return h(\"div\", {\n      class: \"datetime-time\"\n    }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay());\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", {\n      class: \"datetime-year\"\n    }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const {\n      presentation,\n      preferWheel\n    } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderTime(), this.renderFooter()];\n      case 'time-date':\n        return [this.renderHeader(), this.renderTime(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n      case 'time':\n        return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n      default:\n        return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n    }\n  }\n  render() {\n    const {\n      name,\n      value,\n      disabled,\n      el,\n      color,\n      readonly,\n      showMonthAndYear,\n      preferWheel,\n      presentation,\n      size,\n      isGridStyle\n    } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return h(Host, {\n      key: 'f35cf200ff05d33074576e3d2754d3b2a0735b96',\n      \"aria-disabled\": disabled ? 'true' : null,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: isGridStyle\n      }))\n    }, h(\"div\", {\n      key: '859e9354a12bfa58ac3f964c2e66839f17071c00',\n      class: \"intersection-tracker\",\n      ref: el => this.intersectionTrackerRef = el\n    }), this.renderDatetime(mode));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"formatOptions\": [\"formatOptionsChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"min\": [\"minChanged\"],\n      \"max\": [\"maxChanged\"],\n      \"presentation\": [\"presentationChanged\"],\n      \"yearValues\": [\"yearValuesChanged\"],\n      \"monthValues\": [\"monthValuesChanged\"],\n      \"dayValues\": [\"dayValuesChanged\"],\n      \"hourValues\": [\"hourValuesChanged\"],\n      \"minuteValues\": [\"minuteValuesChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: datetimeIosCss,\n      md: datetimeMdCss\n    };\n  }\n}, [289, \"ion-datetime\", {\n  \"color\": [1],\n  \"name\": [1],\n  \"disabled\": [4],\n  \"formatOptions\": [16, \"format-options\"],\n  \"readonly\": [4],\n  \"isDateEnabled\": [16, \"is-date-enabled\"],\n  \"showAdjacentDays\": [4, \"show-adjacent-days\"],\n  \"min\": [1025],\n  \"max\": [1025],\n  \"presentation\": [1],\n  \"cancelText\": [1, \"cancel-text\"],\n  \"doneText\": [1, \"done-text\"],\n  \"clearText\": [1, \"clear-text\"],\n  \"yearValues\": [8, \"year-values\"],\n  \"monthValues\": [8, \"month-values\"],\n  \"dayValues\": [8, \"day-values\"],\n  \"hourValues\": [8, \"hour-values\"],\n  \"minuteValues\": [8, \"minute-values\"],\n  \"locale\": [1],\n  \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n  \"titleSelectedDatesFormatter\": [16, \"title-selected-dates-formatter\"],\n  \"multiple\": [4],\n  \"highlightedDates\": [16, \"highlighted-dates\"],\n  \"value\": [1025],\n  \"showDefaultTitle\": [4, \"show-default-title\"],\n  \"showDefaultButtons\": [4, \"show-default-buttons\"],\n  \"showClearButton\": [4, \"show-clear-button\"],\n  \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n  \"hourCycle\": [1, \"hour-cycle\"],\n  \"size\": [1],\n  \"preferWheel\": [4, \"prefer-wheel\"],\n  \"showMonthAndYear\": [32],\n  \"activeParts\": [32],\n  \"workingParts\": [32],\n  \"isTimePopoverOpen\": [32],\n  \"forceRenderDate\": [32],\n  \"confirm\": [64],\n  \"reset\": [64],\n  \"cancel\": [64]\n}, undefined, {\n  \"formatOptions\": [\"formatOptionsChanged\"],\n  \"disabled\": [\"disabledChanged\"],\n  \"min\": [\"minChanged\"],\n  \"max\": [\"maxChanged\"],\n  \"presentation\": [\"presentationChanged\"],\n  \"yearValues\": [\"yearValuesChanged\"],\n  \"monthValues\": [\"monthValuesChanged\"],\n  \"dayValues\": [\"dayValuesChanged\"],\n  \"hourValues\": [\"hourValuesChanged\"],\n  \"minuteValues\": [\"minuteValuesChanged\"],\n  \"value\": [\"valueChanged\"]\n}]);\nlet datetimeIds = 0;\nconst CANCEL_ROLE = 'datetime-cancel';\nconst CONFIRM_ROLE = 'datetime-confirm';\nconst WHEEL_ITEM_PART = 'wheel-item';\nconst WHEEL_ITEM_ACTIVE_PART = `active`;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-picker\", \"ion-picker-column\", \"ion-picker-column-option\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-datetime\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Datetime);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$a();\n        }\n        break;\n      case \"ion-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$9();\n        }\n        break;\n      case \"ion-buttons\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$8();\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n        break;\n      case \"ion-picker\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n        break;\n      case \"ion-picker-column\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ion-picker-column-option\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ion-popover\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonDatetime, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","startFocusVisible","r","raf","g","getElementRoot","e","renderHiddenInput","a","printIonError","p","printIonWarning","i","isRTL","c","createColorClasses","chevronDown","f","caretUpSharp","chevronForward","caretDownSharp","chevronBack","b","getIonMode","isBefore","isAfter","getPreviousMonth","getNextMonth","isSameDay","d","getDay","generateDayAriaLabel","v","validateParts","getPartsFromCalendarDay","getNextYear","j","getPreviousYear","k","getEndOfWeek","l","getStartOfWeek","m","getPreviousDay","n","getNextDay","o","getPreviousWeek","getNextWeek","q","parseMinParts","parseMaxParts","s","parseDate","w","warnIfValueOutOfBounds","t","parseAmPm","u","clampDate","x","convertToArrayOfNumbers","y","convertDataToISO","z","getToday","A","getClosestValidDate","B","generateMonths","C","getNumDaysInMonth","D","getCombinedDateColumnData","E","getMonthColumnData","F","getDayColumnData","G","getYearColumnData","H","isMonthFirstLocale","I","getTimeColumnsData","J","isLocaleDayPeriodRTL","K","calculateHourFromAMPM","L","getMonthAndYear","M","getDaysOfWeek","N","getDaysOfMonth","O","getHourCycle","P","getLocalizedTime","Q","getLocalizedDateTime","R","formatValue","defineCustomElement$a","defineCustomElement$9","defineCustomElement$8","defineCustomElement$7","defineCustomElement$6","defineCustomElement$5","defineCustomElement$4","defineCustomElement$3","defineCustomElement$2","isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isToday","disabled","ariaSelected","ariaLabel","text","isMonthDisabled","isPrevMonthDisabled","prevMonth","Object","assign","isNextMonthDisabled","nextMonth","getHighlightStyles","highlightedDates","dateIsoString","el","dateStringWithoutTime","split","matchingHighlight","hd","date","textColor","backgroundColor","border","warnIfTimeZoneProvided","formatOptions","_a","_b","_c","_d","timeZone","timeZoneName","time","checkForPresentationFormatMismatch","presentation","datetimeIosCss","datetimeMdCss","Datetime","constructor","_this","this","__registerHost","__attachShadow","ionCancel","ionChange","ionValueChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","prevPresentation","showMonthAndYear","workingParts","month","hour","minute","ampm","isAdjacentDay","isTimePopoverOpen","color","name","readonly","showAdjacentDays","cancelText","doneText","clearText","firstDayOfWeek","multiple","showDefaultTitle","showDefaultButtons","showClearButton","showDefaultTimeLabel","size","preferWheel","warnIfIncorrectValueUsage","value","map","join","setValue","emit","getActivePartsWithFallback","defaultParts","getActivePart","closeParentOverlay","role","popoverOrModal","closest","dismiss","setWorkingParts","setActiveParts","removeDate","validatedParts","filter","hasSlottedButtons","querySelector","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","checkCalendarBodyFocus","ev","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","partsToFocus","key","preventDefault","shiftKey","requestAnimationFrame","firstOfMonth","Date","offset","dayEl","focus","processMinParts","min","processMaxParts","max","initializeCalendarListener","months","querySelectorAll","startMonth","workingMonth","endMonth","mode","needsiOSRubberBandFix","navigator","maxTouchPoints","scrollLeft","clientWidth","getChangedMonth","box","getBoundingClientRect","condition","monthBox","Math","abs","forceRenderDate","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","resolveForceDateScrolling","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","hasValue","length","valueToProcess","singleValue","targetValue","didChangeMonth","bodyIsVisible","isGridStyle","animateToDate","_ref","_asyncToGenerator","forceDateScrollingPromise","Promise","resolve","targetMonthIsBefore","_x","apply","arguments","onFocus","onBlur","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","formatOptionsChanged","disabledChanged","emitStyle","minChanged","maxChanged","presentationChanged","hasDatePresentation","yearValuesChanged","parsedYearValues","yearValues","monthValuesChanged","parsedMonthValues","monthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","hourValues","minuteValuesChanged","parsedMinuteValues","minuteValues","valueChanged","_this2","_this3","closeOverlay","isCalendarPicker","activePartsIsArray","CONFIRM_ROLE","reset","startDate","_this4","cancel","_this5","CANCEL_ROLE","connectedCallback","clearFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","intersectionTrackerRef","visibleCallback","entries","isIntersecting","add","visibleIO","IntersectionObserver","threshold","hiddenCallback","remove","hiddenIO","stopPropagation","componentDidRender","hasCalendarGrid","componentWillLoad","interactive","datetime","renderFooter","isButtonDisabled","clearButtonClick","class","id","onClick","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","isDateEnabled","activePart","monthsToRender","lastMonth","result","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","item","part","WHEEL_ITEM_PART","WHEEL_ITEM_ACTIVE_PART","shouldRenderMonths","shouldRenderDays","days","dayObject","valueNum","parseInt","shouldRenderYears","years","showMonthFirst","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","pickerColumnValue","userHasSelectedDate","hoursData","minutesData","dayPeriodData","hourCycle","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","order","dayPeriod","renderWheelView","columnOrder","renderCalendarHeader","expandedIcon","collapsedIcon","prevMonthDisabled","nextMonthDisabled","hostDir","getAttribute","icon","lazy","flipRtl","dir","slot","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","isDatetimeDisabled","swipeDisabled","isWorkingMonth","dateObject","dayOfWeek","_month","_year","isCalendarPadding","isCalDayDisabled","isCalDayConstrained","dateStyle","dateParts","ref","tabindex","blur","renderCalendarBody","renderCalendar","renderTimeLabel","hasSlottedTimeLabel","renderTimeOverlay","_this6","computedHourCycle","_ref2","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","_x2","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","getHeaderSelectedDateText","titleSelectedDatesFormatter","headerText","weekday","renderHeader","showExpandedHeader","hasSlottedTitle","renderTime","timeOnlyPresentation","renderCalendarViewMonthYearPicker","renderDatetime","hasWheelVariant","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","watchers","ios","md","defineCustomElement$1","customElements","components","tagName","get","define","IonDatetime","defineCustomElement"],"sources":["/home/project/node_modules/@ionic/core/components/ion-datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, g as getElementRoot, e as renderHiddenInput } from './helpers.js';\nimport { a as printIonError, p as printIonWarning } from './index4.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { c as chevronDown, f as caretUpSharp, g as chevronForward, h as caretDownSharp, a as chevronBack } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { i as isBefore, a as isAfter, g as getPreviousMonth, b as getNextMonth, c as isSameDay, d as getDay, e as generateDayAriaLabel, v as validateParts, f as getPartsFromCalendarDay, h as getNextYear, j as getPreviousYear, k as getEndOfWeek, l as getStartOfWeek, m as getPreviousDay, n as getNextDay, o as getPreviousWeek, p as getNextWeek, q as parseMinParts, r as parseMaxParts, s as parseDate, w as warnIfValueOutOfBounds, t as parseAmPm, u as clampDate, x as convertToArrayOfNumbers, y as convertDataToISO, z as getToday, A as getClosestValidDate, B as generateMonths, C as getNumDaysInMonth, D as getCombinedDateColumnData, E as getMonthColumnData, F as getDayColumnData, G as getYearColumnData, H as isMonthFirstLocale, I as getTimeColumnsData, J as isLocaleDayPeriodRTL, K as calculateHourFromAMPM, L as getMonthAndYear, M as getDaysOfWeek, N as getDaysOfMonth, O as getHourCycle, P as getLocalizedTime, Q as getLocalizedDateTime, R as formatValue } from './data.js';\nimport { d as defineCustomElement$a } from './backdrop.js';\nimport { d as defineCustomElement$9 } from './button.js';\nimport { d as defineCustomElement$8 } from './buttons.js';\nimport { d as defineCustomElement$7 } from './icon.js';\nimport { d as defineCustomElement$6 } from './picker.js';\nimport { d as defineCustomElement$5 } from './picker-column.js';\nimport { d as defineCustomElement$4 } from './picker-column-option.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n    if (minParts && minParts.year > refYear) {\n        return true;\n    }\n    if (maxParts && maxParts.year < refYear) {\n        return true;\n    }\n    return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n    /**\n     * If this is a filler date (i.e. padding)\n     * then the date is disabled.\n     */\n    if (refParts.day === null) {\n        return true;\n    }\n    /**\n     * If user passed in a list of acceptable day values\n     * check to make sure that the date we are looking\n     * at is in this array.\n     */\n    if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n        return true;\n    }\n    /**\n     * Given a min date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year < the min allowed year?\n     * 2. Is the current year === min allowed year,\n     * but the current month < the min allowed month?\n     * 3. Is the current year === min allowed year, the\n     * current month === min allow month, but the current\n     * day < the min allowed day?\n     */\n    if (minParts && isBefore(refParts, minParts)) {\n        return true;\n    }\n    /**\n     * Given a max date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year > the max allowed year?\n     * 2. Is the current year === max allowed year,\n     * but the current month > the max allowed month?\n     * 3. Is the current year === max allowed year, the\n     * current month === max allow month, but the current\n     * day > the max allowed day?\n     */\n    if (maxParts && isAfter(refParts, maxParts)) {\n        return true;\n    }\n    /**\n     * If none of these checks\n     * passed then the date should\n     * be interactive.\n     */\n    return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n    /**\n     * activeParts signals what day(s) are currently selected in the datetime.\n     * If multiple=\"true\", this will be an array, but the logic in this util\n     * is the same whether we have one selected day or many because we're only\n     * calculating the state for one button. So, we treat a single activeParts value\n     * the same as an array of length one.\n     */\n    const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n    /**\n     * The day button is active if it is selected, or in other words, if refParts\n     * matches at least one selected date.\n     */\n    const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n    const isToday = isSameDay(refParts, todayParts);\n    const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n    /**\n     * Note that we always return one object regardless of whether activeParts\n     * was an array, since we pare down to one value for isActive.\n     */\n    return {\n        disabled,\n        isActive,\n        isToday,\n        ariaSelected: isActive ? 'true' : null,\n        ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n        text: refParts.day != null ? getDay(locale, refParts) : null,\n    };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n    // If the year is disabled then the month is disabled.\n    if (isYearDisabled(refParts.year, minParts, maxParts)) {\n        return true;\n    }\n    // If the date value is before the min date, then the month is disabled.\n    // If the date value is after the max date, then the month is disabled.\n    if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n        return true;\n    }\n    return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n    const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n    return isMonthDisabled(prevMonth, {\n        minParts,\n        maxParts,\n    });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n    const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n    return isMonthDisabled(nextMonth, {\n        maxParts,\n    });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nconst getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n    if (Array.isArray(highlightedDates)) {\n        const dateStringWithoutTime = dateIsoString.split('T')[0];\n        const matchingHighlight = highlightedDates.find((hd) => hd.date === dateStringWithoutTime);\n        if (matchingHighlight) {\n            return {\n                textColor: matchingHighlight.textColor,\n                backgroundColor: matchingHighlight.backgroundColor,\n                border: matchingHighlight.border,\n            };\n        }\n    }\n    else {\n        /**\n         * Wrap in a try-catch to prevent exceptions in the user's function\n         * from interrupting the calendar's rendering.\n         */\n        try {\n            return highlightedDates(dateIsoString);\n        }\n        catch (e) {\n            printIonError('[ion-datetime] - Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n        }\n    }\n    return undefined;\n};\n\n/**\n * If a time zone is provided in the format options, the rendered text could\n * differ from what was selected in the Datetime, which could cause\n * confusion.\n */\nconst warnIfTimeZoneProvided = (el, formatOptions) => {\n    var _a, _b, _c, _d;\n    if (((_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _a === void 0 ? void 0 : _a.timeZone) ||\n        ((_b = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _b === void 0 ? void 0 : _b.timeZoneName) ||\n        ((_c = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _c === void 0 ? void 0 : _c.timeZone) ||\n        ((_d = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _d === void 0 ? void 0 : _d.timeZoneName)) {\n        printIonWarning('[ion-datetime] - \"timeZone\" and \"timeZoneName\" are not supported in \"formatOptions\".', el);\n    }\n};\nconst checkForPresentationFormatMismatch = (el, presentation, formatOptions) => {\n    // formatOptions is not required\n    if (!formatOptions)\n        return;\n    // If formatOptions is provided, the date and/or time objects are required, depending on the presentation\n    switch (presentation) {\n        case 'date':\n        case 'month-year':\n        case 'month':\n        case 'year':\n            if (formatOptions.date === undefined) {\n                printIonWarning(`[ion-datetime] - The '${presentation}' presentation requires a date object in formatOptions.`, el);\n            }\n            break;\n        case 'time':\n            if (formatOptions.time === undefined) {\n                printIonWarning(`[ion-datetime] - The 'time' presentation requires a time object in formatOptions.`, el);\n            }\n            break;\n        case 'date-time':\n        case 'time-date':\n            if (formatOptions.date === undefined && formatOptions.time === undefined) {\n                printIonWarning(`[ion-datetime] - The '${presentation}' presentation requires either a date or time object (or both) in formatOptions.`, el);\n            }\n            break;\n    }\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-button{--background:transparent}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:not(.calendar-day-adjacent-day):focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, var(--ion-background-color-step-300, #edeef0));color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons .calendar-month-year-toggle{color:var(--ion-color-base)}.calendar-month-year{min-width:0}.calendar-month-year-toggle{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;position:relative;border:0;outline:none;background:transparent;cursor:pointer;z-index:1}.calendar-month-year-toggle::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;-webkit-transition:opacity 15ms linear, background-color 15ms linear;transition:opacity 15ms linear, background-color 15ms linear;z-index:-1}.calendar-month-year-toggle.ion-focused::after{background:currentColor}.calendar-month-year-toggle:disabled{opacity:0.3;pointer-events:none}.calendar-month-year-toggle ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0;-ms-flex-negative:0;flex-shrink:0}.calendar-month-year-toggle #toggle-wrapper{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}ion-picker{--highlight-background:var(--wheel-highlight-background);--highlight-border-radius:var(--wheel-highlight-border-radius);--fade-background-rgb:var(--wheel-fade-background-rgb)}:host{--background:var(--ion-color-light, #f4f5f8);--background-rgb:var(--ion-color-light-rgb, 244, 245, 248);--title-color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, var(--ion-background-color-step-200, #cccccc));font-size:min(0.875rem, 22.4px)}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}.calendar-month-year-toggle{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:0px;padding-bottom:0px;min-height:44px;font-size:min(1rem, 25.6px);font-weight:600}.calendar-month-year-toggle.ion-focused::after{opacity:0.15}.calendar-month-year-toggle #toggle-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:10px;margin-bottom:10px}:host .calendar-action-buttons .calendar-month-year-toggle ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, var(--ion-text-color-step-700, #b3b3b3));font-size:min(0.75rem, 19.2px);font-weight:600;line-height:24px;text-transform:uppercase}@supports (border-radius: mod(1px, 1px)){.calendar-days-of-week .day-of-week{width:clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);height:24px;overflow:hidden}.calendar-day{border-radius:max(8px, mod(min(1rem, 24px), 24px) * 10)}}@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))){.calendar-days-of-week .day-of-week{width:auto;height:auto;overflow:initial}.calendar-day{border-radius:32px}}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-ms-flex-align:center;align-items:center;height:calc(100% - 16px)}:host .calendar-day-wrapper{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;height:0;min-height:1rem}:host .calendar-day{width:40px;min-width:40px;height:40px;font-size:min(1.25rem, 32px)}.calendar-day.calendar-day-active{background:rgba(var(--ion-color-base-rgb), 0.2);font-size:min(1.375rem, 35.2px)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active,:host .calendar-day.calendar-day-adjacent-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-adjacent-day{color:var(--ion-color-step-300, var(--ion-text-color-step-700, #b3b3b3))}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:16px;font-size:min(1rem, 25.6px)}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, var(--ion-background-color-step-200, #cccccc))}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-button{--background:transparent}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:not(.calendar-day-adjacent-day):focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, var(--ion-background-color-step-300, #edeef0));color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons .calendar-month-year-toggle{color:var(--ion-color-base)}.calendar-month-year{min-width:0}.calendar-month-year-toggle{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;position:relative;border:0;outline:none;background:transparent;cursor:pointer;z-index:1}.calendar-month-year-toggle::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;-webkit-transition:opacity 15ms linear, background-color 15ms linear;transition:opacity 15ms linear, background-color 15ms linear;z-index:-1}.calendar-month-year-toggle.ion-focused::after{background:currentColor}.calendar-month-year-toggle:disabled{opacity:0.3;pointer-events:none}.calendar-month-year-toggle ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0;-ms-flex-negative:0;flex-shrink:0}.calendar-month-year-toggle #toggle-wrapper{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}ion-picker{--highlight-background:var(--wheel-highlight-background);--highlight-border-radius:var(--wheel-highlight-border-radius);--fade-background-rgb:var(--wheel-fade-background-rgb)}:host{--background:var(--ion-color-step-100, var(--ion-background-color-step-100, #ffffff));--title-color:var(--ion-color-contrast)}:host .datetime-header{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}:host .datetime-header .datetime-title{font-size:0.75rem;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:2.125rem}:host .calendar-action-buttons ion-button{--color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959))}.calendar-month-year-toggle{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:12px;padding-bottom:12px;min-height:48px;background:transparent;color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959));z-index:1}.calendar-month-year-toggle.ion-focused::after{opacity:0.04}.calendar-month-year-toggle ion-ripple-effect{color:currentColor}@media (any-hover: hover){.calendar-month-year-toggle.ion-activatable:not(.ion-focused):hover::after{background:currentColor;opacity:0.04}}:host .calendar-days-of-week{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, var(--ion-text-color-step-500, gray));font-size:0.875rem;line-height:36px}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}:host .calendar-day{width:42px;min-width:42px;height:42px;font-size:0.875rem}:host .calendar-day.calendar-day-today{border:1px solid var(--ion-color-base);color:var(--ion-color-base)}:host .calendar-day.calendar-day-active,:host .calendar-day.calendar-day-adjacent-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active,.calendar-day.calendar-day-active:focus{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .calendar-day.calendar-day-adjacent-day{color:var(--ion-color-step-500, var(--ion-text-color-step-500, gray))}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:8px}:host .time-header{color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959))}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}\";\n\nconst Datetime = /*@__PURE__*/ proxyCustomElement(class Datetime extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionRender = createEvent(this, \"ionRender\", 7);\n        this.inputId = `ion-dt-${datetimeIds++}`;\n        this.prevPresentation = null;\n        this.showMonthAndYear = false;\n        this.activeParts = [];\n        this.workingParts = {\n            month: 5,\n            day: 28,\n            year: 2021,\n            hour: 13,\n            minute: 52,\n            ampm: 'pm',\n            isAdjacentDay: false,\n        };\n        this.isTimePopoverOpen = false;\n        /**\n         * The color to use from your application's color palette.\n         * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n         * For more information on colors, see [theming](/docs/theming/basics).\n         */\n        this.color = 'primary';\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the datetime.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the datetime appears normal but the selected date cannot be changed.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the datetime calendar displays a six-week (42-day) layout,\n         * including days from the previous and next months to fill the grid.\n         * These adjacent days are selectable unless disabled.\n         */\n        this.showAdjacentDays = false;\n        /**\n         * Which values you want to select. `\"date\"` will show\n         * a calendar picker to select the month, day, and year. `\"time\"`\n         * will show a time picker to select the hour, minute, and (optionally)\n         * AM/PM. `\"date-time\"` will show the date picker first and time picker second.\n         * `\"time-date\"` will show the time picker first and date picker second.\n         */\n        this.presentation = 'date-time';\n        /**\n         * The text to display on the picker's cancel button.\n         */\n        this.cancelText = 'Cancel';\n        /**\n         * The text to display on the picker's \"Done\" button.\n         */\n        this.doneText = 'Done';\n        /**\n         * The text to display on the picker's \"Clear\" button.\n         */\n        this.clearText = 'Clear';\n        /**\n         * The locale to use for `ion-datetime`. This\n         * impacts month and day name formatting.\n         * The `\"default\"` value refers to the default\n         * locale set by your device.\n         */\n        this.locale = 'default';\n        /**\n         * The first day of the week to use for `ion-datetime`. The\n         * default value is `0` and represents Sunday.\n         */\n        this.firstDayOfWeek = 0;\n        /**\n         * If `true`, multiple dates can be selected at once. Only\n         * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n         */\n        this.multiple = false;\n        /**\n         * If `true`, a header will be shown above the calendar\n         * picker. This will include both the slotted title, and\n         * the selected date.\n         */\n        this.showDefaultTitle = false;\n        /**\n         * If `true`, the default \"Cancel\" and \"OK\" buttons\n         * will be rendered at the bottom of the `ion-datetime`\n         * component. Developers can also use the `button` slot\n         * if they want to customize these buttons. If custom\n         * buttons are set in the `button` slot then the\n         * default buttons will not be rendered.\n         */\n        this.showDefaultButtons = false;\n        /**\n         * If `true`, a \"Clear\" button will be rendered alongside\n         * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n         * component. Developers can also use the `button` slot\n         * if they want to customize these buttons. If custom\n         * buttons are set in the `button` slot then the\n         * default buttons will not be rendered.\n         */\n        this.showClearButton = false;\n        /**\n         * If `true`, the default \"Time\" label will be rendered\n         * for the time selector of the `ion-datetime` component.\n         * Developers can also use the `time-label` slot\n         * if they want to customize this label. If a custom\n         * label is set in the `time-label` slot then the\n         * default label will not be rendered.\n         */\n        this.showDefaultTimeLabel = true;\n        /**\n         * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n         * If `fixed`, the `ion-datetime` will have a fixed width.\n         */\n        this.size = 'fixed';\n        /**\n         * If `true`, a wheel picker will be rendered instead of a calendar grid\n         * where possible. If `false`, a calendar grid will be rendered instead of\n         * a wheel picker where possible.\n         *\n         * A wheel picker can be rendered instead of a grid when `presentation` is\n         * one of the following values: `\"date\"`, `\"date-time\"`, or `\"time-date\"`.\n         *\n         * A wheel picker will always be rendered regardless of\n         * the `preferWheel` value when `presentation` is one of the following values:\n         * `\"time\"`, `\"month\"`, `\"month-year\"`, or `\"year\"`.\n         */\n        this.preferWheel = false;\n        this.warnIfIncorrectValueUsage = () => {\n            const { multiple, value } = this;\n            if (!multiple && Array.isArray(value)) {\n                /**\n                 * We do some processing on the `value` array so\n                 * that it looks more like an array when logged to\n                 * the console.\n                 * Example given ['a', 'b']\n                 * Default toString() behavior: a,b\n                 * Custom behavior: ['a', 'b']\n                 */\n                printIonWarning(`[ion-datetime] - An array of values was passed, but multiple is \"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map((v) => `'${v}'`).join(', ')}]\n`, this.el);\n            }\n        };\n        this.setValue = (value) => {\n            this.value = value;\n            this.ionChange.emit({ value });\n        };\n        /**\n         * Returns the DatetimePart interface\n         * to use when rendering an initial set of\n         * data. This should be used when rendering an\n         * interface in an environment where the `value`\n         * may not be set. This function works\n         * by returning the first selected date and then\n         * falling back to defaultParts if no active date\n         * is selected.\n         */\n        this.getActivePartsWithFallback = () => {\n            var _a;\n            const { defaultParts } = this;\n            return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n        };\n        this.getActivePart = () => {\n            const { activeParts } = this;\n            return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n        };\n        this.closeParentOverlay = (role) => {\n            const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n            if (popoverOrModal) {\n                popoverOrModal.dismiss(undefined, role);\n            }\n        };\n        this.setWorkingParts = (parts) => {\n            this.workingParts = Object.assign({}, parts);\n        };\n        this.setActiveParts = (parts, removeDate = false) => {\n            /** if the datetime component is in readonly mode,\n             * allow browsing of the calendar without changing\n             * the set value\n             */\n            if (this.readonly) {\n                return;\n            }\n            const { multiple, minParts, maxParts, activeParts } = this;\n            /**\n             * When setting the active parts, it is possible\n             * to set invalid data. For example,\n             * when updating January 31 to February,\n             * February 31 does not exist. As a result\n             * we need to validate the active parts and\n             * ensure that we are only setting valid dates.\n             * Additionally, we need to update the working parts\n             * too in the event that the validated parts are different.\n             */\n            const validatedParts = validateParts(parts, minParts, maxParts);\n            this.setWorkingParts(validatedParts);\n            if (multiple) {\n                const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n                if (removeDate) {\n                    this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n                }\n                else {\n                    this.activeParts = [...activePartsArray, validatedParts];\n                }\n            }\n            else {\n                this.activeParts = Object.assign({}, validatedParts);\n            }\n            const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n            if (hasSlottedButtons || this.showDefaultButtons) {\n                return;\n            }\n            this.confirm();\n        };\n        this.initializeKeyboardListeners = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const root = this.el.shadowRoot;\n            /**\n             * Get a reference to the month\n             * element we are currently viewing.\n             */\n            const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n            /**\n             * When focusing the calendar body, we want to pass focus\n             * to the working day, but other days should\n             * only be accessible using the arrow keys. Pressing\n             * Tab should jump between bodies of selectable content.\n             */\n            const checkCalendarBodyFocus = (ev) => {\n                var _a;\n                const record = ev[0];\n                /**\n                 * If calendar body was already focused\n                 * when this fired or if the calendar body\n                 * if not currently focused, we should not re-focus\n                 * the inner day.\n                 */\n                if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n                    return;\n                }\n                this.focusWorkingDay(currentMonth);\n            };\n            const mo = new MutationObserver(checkCalendarBodyFocus);\n            mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n            this.destroyKeyboardMO = () => {\n                mo === null || mo === void 0 ? void 0 : mo.disconnect();\n            };\n            /**\n             * We must use keydown not keyup as we want\n             * to prevent scrolling when using the arrow keys.\n             */\n            calendarBodyRef.addEventListener('keydown', (ev) => {\n                const activeElement = root.activeElement;\n                if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n                    return;\n                }\n                const parts = getPartsFromCalendarDay(activeElement);\n                let partsToFocus;\n                switch (ev.key) {\n                    case 'ArrowDown':\n                        ev.preventDefault();\n                        partsToFocus = getNextWeek(parts);\n                        break;\n                    case 'ArrowUp':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousWeek(parts);\n                        break;\n                    case 'ArrowRight':\n                        ev.preventDefault();\n                        partsToFocus = getNextDay(parts);\n                        break;\n                    case 'ArrowLeft':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousDay(parts);\n                        break;\n                    case 'Home':\n                        ev.preventDefault();\n                        partsToFocus = getStartOfWeek(parts);\n                        break;\n                    case 'End':\n                        ev.preventDefault();\n                        partsToFocus = getEndOfWeek(parts);\n                        break;\n                    case 'PageUp':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n                        break;\n                    case 'PageDown':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n                        break;\n                    /**\n                     * Do not preventDefault here\n                     * as we do not want to override other\n                     * browser defaults such as pressing Enter/Space\n                     * to select a day.\n                     */\n                    default:\n                        return;\n                }\n                /**\n                 * If the day we want to move focus to is\n                 * disabled, do not do anything.\n                 */\n                if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n                    return;\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n                /**\n                 * Give view a chance to re-render\n                 * then move focus to the new working day\n                 */\n                requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n            });\n        };\n        this.focusWorkingDay = (currentMonth) => {\n            /**\n             * Get the number of offset days so\n             * we know how much to offset our next selector by\n             * to grab the correct calendar-day element.\n             */\n            const { day, month, year } = this.workingParts;\n            const firstOfMonth = new Date(`${month}/1/${year}`).getDay();\n            const offset = firstOfMonth >= this.firstDayOfWeek\n                ? firstOfMonth - this.firstDayOfWeek\n                : 7 - (this.firstDayOfWeek - firstOfMonth);\n            if (day === null) {\n                return;\n            }\n            /**\n             * Get the calendar day element\n             * and focus it.\n             */\n            const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${offset + day}) .calendar-day`);\n            if (dayEl) {\n                dayEl.focus();\n            }\n        };\n        this.processMinParts = () => {\n            const { min, defaultParts } = this;\n            if (min === undefined) {\n                this.minParts = undefined;\n                return;\n            }\n            this.minParts = parseMinParts(min, defaultParts);\n        };\n        this.processMaxParts = () => {\n            const { max, defaultParts } = this;\n            if (max === undefined) {\n                this.maxParts = undefined;\n                return;\n            }\n            this.maxParts = parseMaxParts(max, defaultParts);\n        };\n        this.initializeCalendarListener = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            /**\n             * For performance reasons, we only render 3\n             * months at a time: The current month, the previous\n             * month, and the next month. We have a scroll listener\n             * on the calendar body to append/prepend new months.\n             *\n             * We can do this because Stencil is smart enough to not\n             * re-create the .calendar-month containers, but rather\n             * update the content within those containers.\n             *\n             * As an added bonus, WebKit has some troubles with\n             * scroll-snap-stop: always, so not rendering all of\n             * the months in a row allows us to mostly sidestep\n             * that issue.\n             */\n            const months = calendarBodyRef.querySelectorAll('.calendar-month');\n            const startMonth = months[0];\n            const workingMonth = months[1];\n            const endMonth = months[2];\n            const mode = getIonMode(this);\n            const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n            /**\n             * Before setting up the scroll listener,\n             * scroll the middle month into view.\n             * scrollIntoView() will scroll entire page\n             * if element is not in viewport. Use scrollLeft instead.\n             */\n            writeTask(() => {\n                calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                const getChangedMonth = (parts) => {\n                    const box = calendarBodyRef.getBoundingClientRect();\n                    /**\n                     * If the current scroll position is all the way to the left\n                     * then we have scrolled to the previous month.\n                     * Otherwise, assume that we have scrolled to the next\n                     * month. We have a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     *\n                     * Check below the next line ensures that we did not\n                     * swipe and abort (i.e. we swiped but we are still on the current month).\n                     */\n                    const condition = isRTL(this.el) ? calendarBodyRef.scrollLeft >= -2 : calendarBodyRef.scrollLeft <= 2;\n                    const month = condition ? startMonth : endMonth;\n                    /**\n                     * The edge of the month must be lined up with\n                     * the edge of the calendar body in order for\n                     * the component to update. Otherwise, it\n                     * may be the case that the user has paused their\n                     * swipe or the browser has not finished snapping yet.\n                     * Rather than check if the x values are equal,\n                     * we give it a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     */\n                    const monthBox = month.getBoundingClientRect();\n                    if (Math.abs(monthBox.x - box.x) > 2)\n                        return;\n                    /**\n                     * If we're force-rendering a month, assume we've\n                     * scrolled to that and return it.\n                     *\n                     * If forceRenderDate is ever used in a context where the\n                     * forced month is not immediately auto-scrolled to, this\n                     * should be updated to also check whether `month` has the\n                     * same month and year as the forced date.\n                     */\n                    const { forceRenderDate } = this;\n                    if (forceRenderDate !== undefined) {\n                        return { month: forceRenderDate.month, year: forceRenderDate.year, day: forceRenderDate.day };\n                    }\n                    /**\n                     * From here, we can determine if the start\n                     * month or the end month was scrolled into view.\n                     * If no month was changed, then we can return from\n                     * the scroll callback early.\n                     */\n                    if (month === startMonth) {\n                        return getPreviousMonth(parts);\n                    }\n                    else if (month === endMonth) {\n                        return getNextMonth(parts);\n                    }\n                    else {\n                        return;\n                    }\n                };\n                const updateActiveMonth = () => {\n                    if (needsiOSRubberBandFix) {\n                        calendarBodyRef.style.removeProperty('pointer-events');\n                        appliediOSRubberBandFix = false;\n                    }\n                    /**\n                     * If the month did not change\n                     * then we can return early.\n                     */\n                    const newDate = getChangedMonth(this.workingParts);\n                    if (!newDate)\n                        return;\n                    const { month, day, year } = newDate;\n                    if (isMonthDisabled({ month, year, day: null }, {\n                        minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                        maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n                    })) {\n                        return;\n                    }\n                    /**\n                     * Prevent scrolling for other browsers\n                     * to give the DOM time to update and the container\n                     * time to properly snap.\n                     */\n                    calendarBodyRef.style.setProperty('overflow', 'hidden');\n                    /**\n                     * Use a writeTask here to ensure\n                     * that the state is updated and the\n                     * correct month is scrolled into view\n                     * in the same frame. This is not\n                     * typically a problem on newer devices\n                     * but older/slower device may have a flicker\n                     * if we did not do this.\n                     */\n                    writeTask(() => {\n                        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n                        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                        calendarBodyRef.style.removeProperty('overflow');\n                        if (this.resolveForceDateScrolling) {\n                            this.resolveForceDateScrolling();\n                        }\n                    });\n                };\n                /**\n                 * When the container finishes scrolling we\n                 * need to update the DOM with the selected month.\n                 */\n                let scrollTimeout;\n                /**\n                 * We do not want to attempt to set pointer-events\n                 * multiple times within a single swipe gesture as\n                 * that adds unnecessary work to the main thread.\n                 */\n                let appliediOSRubberBandFix = false;\n                const scrollCallback = () => {\n                    if (scrollTimeout) {\n                        clearTimeout(scrollTimeout);\n                    }\n                    /**\n                     * On iOS it is possible to quickly rubber band\n                     * the scroll area before the scroll timeout has fired.\n                     * This results in users reaching the end of the scrollable\n                     * container before the DOM has updated.\n                     * By setting `pointer-events: none` we can ensure that\n                     * subsequent swipes do not happen while the container\n                     * is snapping.\n                     */\n                    if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n                        calendarBodyRef.style.setProperty('pointer-events', 'none');\n                        appliediOSRubberBandFix = true;\n                    }\n                    // Wait ~3 frames\n                    scrollTimeout = setTimeout(updateActiveMonth, 50);\n                };\n                calendarBodyRef.addEventListener('scroll', scrollCallback);\n                this.destroyCalendarListener = () => {\n                    calendarBodyRef.removeEventListener('scroll', scrollCallback);\n                };\n            });\n        };\n        /**\n         * Clean up all listeners except for the overlay\n         * listener. This is so that we can re-create the listeners\n         * if the datetime has been hidden/presented by a modal or popover.\n         */\n        this.destroyInteractionListeners = () => {\n            const { destroyCalendarListener, destroyKeyboardMO } = this;\n            if (destroyCalendarListener !== undefined) {\n                destroyCalendarListener();\n            }\n            if (destroyKeyboardMO !== undefined) {\n                destroyKeyboardMO();\n            }\n        };\n        this.processValue = (value) => {\n            const hasValue = value !== null && value !== undefined && value !== '' && (!Array.isArray(value) || value.length > 0);\n            const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n            const { minParts, maxParts, workingParts, el } = this;\n            this.warnIfIncorrectValueUsage();\n            /**\n             * Return early if the value wasn't parsed correctly, such as\n             * if an improperly formatted date string was provided.\n             */\n            if (!valueToProcess) {\n                return;\n            }\n            /**\n             * Datetime should only warn of out of bounds values\n             * if set by the user. If the `value` is undefined,\n             * we will default to today's date which may be out\n             * of bounds. In this case, the warning makes it look\n             * like the developer did something wrong which is\n             * not true.\n             */\n            if (hasValue) {\n                warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n            }\n            /**\n             * If there are multiple values, clamp to the last one.\n             * This is because the last value is the one that the user\n             * has most recently interacted with.\n             */\n            const singleValue = Array.isArray(valueToProcess) ? valueToProcess[valueToProcess.length - 1] : valueToProcess;\n            const targetValue = clampDate(singleValue, minParts, maxParts);\n            const { month, day, year, hour, minute } = targetValue;\n            const ampm = parseAmPm(hour);\n            /**\n             * Since `activeParts` indicates a value that been explicitly selected\n             * either by the user or the app, only update `activeParts` if the\n             * `value` property is set.\n             */\n            if (hasValue) {\n                if (Array.isArray(valueToProcess)) {\n                    this.activeParts = [...valueToProcess];\n                }\n                else {\n                    this.activeParts = {\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    };\n                }\n            }\n            else {\n                /**\n                 * Reset the active parts if the value is not set.\n                 * This will clear the selected calendar day when\n                 * performing a clear action or using the reset() method.\n                 */\n                this.activeParts = [];\n            }\n            const didChangeMonth = (month !== undefined && month !== workingParts.month) || (year !== undefined && year !== workingParts.year);\n            const bodyIsVisible = el.classList.contains('datetime-ready');\n            const { isGridStyle, showMonthAndYear } = this;\n            if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n                /**\n                 * Only animate if:\n                 * 1. We're using grid style (wheel style pickers should just jump to new value)\n                 * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n                 * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n                 * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n                 */\n                this.animateToDate(targetValue);\n            }\n            else {\n                this.setWorkingParts({\n                    month,\n                    day,\n                    year,\n                    hour,\n                    minute,\n                    ampm,\n                });\n            }\n        };\n        this.animateToDate = async (targetValue) => {\n            const { workingParts } = this;\n            /**\n             * Tell other render functions that we need to force the\n             * target month to appear in place of the actual next/prev month.\n             * Because this is a State variable, a rerender will be triggered\n             * automatically, updating the rendered months.\n             */\n            this.forceRenderDate = targetValue;\n            /**\n             * Flag that we've started scrolling to the forced date.\n             * The resolve function will be called by the datetime's\n             * scroll listener when it's done updating everything.\n             * This is a replacement for making prev/nextMonth async,\n             * since the logic we're waiting on is in a listener.\n             */\n            const forceDateScrollingPromise = new Promise((resolve) => {\n                this.resolveForceDateScrolling = resolve;\n            });\n            /**\n             * Animate smoothly to the forced month. This will also update\n             * workingParts and correct the surrounding months for us.\n             */\n            const targetMonthIsBefore = isBefore(targetValue, workingParts);\n            targetMonthIsBefore ? this.prevMonth() : this.nextMonth();\n            await forceDateScrollingPromise;\n            this.resolveForceDateScrolling = undefined;\n            this.forceRenderDate = undefined;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.hasValue = () => {\n            return this.value != null;\n        };\n        this.nextMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n            if (!nextMonth) {\n                return;\n            }\n            const left = nextMonth.offsetWidth * 2;\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: left * (isRTL(this.el) ? -1 : 1),\n                behavior: 'smooth',\n            });\n        };\n        this.prevMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n            if (!prevMonth) {\n                return;\n            }\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            });\n        };\n        this.toggleMonthAndYearView = () => {\n            this.showMonthAndYear = !this.showMonthAndYear;\n        };\n    }\n    formatOptionsChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n        warnIfTimeZoneProvided(el, formatOptions);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    minChanged() {\n        this.processMinParts();\n    }\n    maxChanged() {\n        this.processMaxParts();\n    }\n    presentationChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n    }\n    get isGridStyle() {\n        const { presentation, preferWheel } = this;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        return hasDatePresentation && !preferWheel;\n    }\n    yearValuesChanged() {\n        this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    }\n    monthValuesChanged() {\n        this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    }\n    dayValuesChanged() {\n        this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    }\n    hourValuesChanged() {\n        this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    }\n    minuteValuesChanged() {\n        this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    }\n    /**\n     * Update the datetime value when the value changes\n     */\n    async valueChanged() {\n        const { value } = this;\n        if (this.hasValue()) {\n            this.processValue(value);\n        }\n        this.emitStyle();\n        this.ionValueChange.emit({ value });\n    }\n    /**\n     * Confirms the selected datetime value, updates the\n     * `value` property, and optionally closes the popover\n     * or modal that the datetime was presented in.\n     *\n     * @param closeOverlay If `true`, closes the parent overlay. Defaults to `false`.\n     */\n    async confirm(closeOverlay = false) {\n        const { isCalendarPicker, activeParts, preferWheel, workingParts } = this;\n        /**\n         * We only update the value if the presentation is not a calendar picker.\n         */\n        if (activeParts !== undefined || !isCalendarPicker) {\n            const activePartsIsArray = Array.isArray(activeParts);\n            if (activePartsIsArray && activeParts.length === 0) {\n                if (preferWheel) {\n                    /**\n                     * If the datetime is using a wheel picker, but the\n                     * active parts are empty, then the user has confirmed the\n                     * initial value (working parts) presented to them.\n                     */\n                    this.setValue(convertDataToISO(workingParts));\n                }\n                else {\n                    this.setValue(undefined);\n                }\n            }\n            else {\n                this.setValue(convertDataToISO(activeParts));\n            }\n        }\n        if (closeOverlay) {\n            this.closeParentOverlay(CONFIRM_ROLE);\n        }\n    }\n    /**\n     * Resets the internal state of the datetime but does not update the value.\n     * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n     * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n     *\n     * @param startDate A valid [ISO-8601 string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format) to reset the datetime state to.\n     */\n    async reset(startDate) {\n        this.processValue(startDate);\n    }\n    /**\n     * Emits the ionCancel event and\n     * optionally closes the popover\n     * or modal that the datetime was\n     * presented in.\n     *\n     * @param closeOverlay If `true`, closes the parent overlay. Defaults to `false`.\n     */\n    async cancel(closeOverlay = false) {\n        this.ionCancel.emit();\n        if (closeOverlay) {\n            this.closeParentOverlay(CANCEL_ROLE);\n        }\n    }\n    get isCalendarPicker() {\n        const { presentation } = this;\n        return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    }\n    connectedCallback() {\n        this.clearFocusVisible = startFocusVisible(this.el).destroy;\n    }\n    disconnectedCallback() {\n        if (this.clearFocusVisible) {\n            this.clearFocusVisible();\n            this.clearFocusVisible = undefined;\n        }\n    }\n    initializeListeners() {\n        this.initializeCalendarListener();\n        this.initializeKeyboardListeners();\n    }\n    componentDidLoad() {\n        const { el, intersectionTrackerRef } = this;\n        /**\n         * If a scrollable element is hidden using `display: none`,\n         * it will not have a scroll height meaning we cannot scroll elements\n         * into view. As a result, we will need to wait for the datetime to become\n         * visible if used inside of a modal or a popover otherwise the scrollable\n         * areas will not have the correct values snapped into place.\n         */\n        const visibleCallback = (entries) => {\n            const ev = entries[0];\n            if (!ev.isIntersecting) {\n                return;\n            }\n            this.initializeListeners();\n            /**\n             * TODO FW-2793: Datetime needs a frame to ensure that it\n             * can properly scroll contents into view. As a result\n             * we hide the scrollable content until after that frame\n             * so users do not see the content quickly shifting. The downside\n             * is that the content will pop into view a frame after. Maybe there\n             * is a better way to handle this?\n             */\n            writeTask(() => {\n                this.el.classList.add('datetime-ready');\n            });\n        };\n        const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01, root: el });\n        /**\n         * Use raf to avoid a race condition between the component loading and\n         * its display animation starting (such as when shown in a modal). This\n         * could cause the datetime to start at a visibility of 0, erroneously\n         * triggering the `hiddenIO` observer below.\n         */\n        raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(intersectionTrackerRef));\n        /**\n         * We need to clean up listeners when the datetime is hidden\n         * in a popover/modal so that we can properly scroll containers\n         * back into view if they are re-presented. When the datetime is hidden\n         * the scroll areas have scroll widths/heights of 0px, so any snapping\n         * we did originally has been lost.\n         */\n        const hiddenCallback = (entries) => {\n            const ev = entries[0];\n            if (ev.isIntersecting) {\n                return;\n            }\n            this.destroyInteractionListeners();\n            /**\n             * When datetime is hidden, we need to make sure that\n             * the month/year picker is closed. Otherwise,\n             * it will be open when the datetime re-appears\n             * and the scroll area of the calendar grid will be 0.\n             * As a result, the wrong month will be shown.\n             */\n            this.showMonthAndYear = false;\n            writeTask(() => {\n                this.el.classList.remove('datetime-ready');\n            });\n        };\n        const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0, root: el });\n        raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(intersectionTrackerRef));\n        /**\n         * Datetime uses Ionic components that emit\n         * ionFocus and ionBlur. These events are\n         * composed meaning they will cross\n         * the shadow dom boundary. We need to\n         * stop propagation on these events otherwise\n         * developers will see 2 ionFocus or 2 ionBlur\n         * events at a time.\n         */\n        const root = getElementRoot(this.el);\n        root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n        root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n    }\n    /**\n     * When the presentation is changed, all calendar content is recreated,\n     * so we need to re-init behavior with the new elements.\n     */\n    componentDidRender() {\n        const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel, forceRenderDate } = this;\n        /**\n         * TODO(FW-2165)\n         * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n         * When using `min`, we add `scroll-snap-align: none`\n         * to the disabled month so that users cannot scroll to it.\n         * This triggers a bug in WebKit where the scroll position is reset.\n         * Since the month change logic is handled by a scroll listener,\n         * this causes the month to change leading to `scroll-snap-align`\n         * changing again, thus changing the scroll position again and causing\n         * an infinite loop.\n         * This issue only applies to the calendar grid, so we can disable\n         * it if the calendar grid is not being used.\n         */\n        const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n        if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n            const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n            /**\n             * We need to make sure the datetime is not in the process\n             * of scrolling to a new datetime value if the value\n             * is updated programmatically.\n             * Otherwise, the datetime will appear to not scroll at all because\n             * we are resetting the scroll position to the center of the view.\n             * Prior to the datetime's value being updated programmatically,\n             * the calendarBodyRef is scrolled such that the middle month is centered\n             * in the view. The below code updates the scroll position so the middle\n             * month is also centered in the view. Since the scroll position did not change,\n             * the scroll callback in this file does not fire,\n             * and the resolveForceDateScrolling promise never resolves.\n             */\n            if (workingMonth && forceRenderDate === undefined) {\n                calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            }\n        }\n        if (prevPresentation === null) {\n            this.prevPresentation = presentation;\n            return;\n        }\n        if (presentation === prevPresentation) {\n            return;\n        }\n        this.prevPresentation = presentation;\n        this.destroyInteractionListeners();\n        this.initializeListeners();\n        /**\n         * The month/year picker from the date interface\n         * should be closed as it is not available in non-date\n         * interfaces.\n         */\n        this.showMonthAndYear = false;\n        raf(() => {\n            this.ionRender.emit();\n        });\n    }\n    componentWillLoad() {\n        const { el, formatOptions, highlightedDates, multiple, presentation, preferWheel } = this;\n        if (multiple) {\n            if (presentation !== 'date') {\n                printIonWarning('[ion-datetime] - Multiple date selection is only supported for presentation=\"date\".', el);\n            }\n            if (preferWheel) {\n                printIonWarning('[ion-datetime] - Multiple date selection is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (highlightedDates !== undefined) {\n            if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n                printIonWarning('[ion-datetime] - The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n            }\n            if (preferWheel) {\n                printIonWarning('[ion-datetime] - The highlightedDates property is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (formatOptions) {\n            checkForPresentationFormatMismatch(el, presentation, formatOptions);\n            warnIfTimeZoneProvided(el, formatOptions);\n        }\n        const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n        const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n        const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n        const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n        const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n        const todayParts = (this.todayParts = parseDate(getToday()));\n        this.processMinParts();\n        this.processMaxParts();\n        this.defaultParts = getClosestValidDate({\n            refParts: todayParts,\n            monthValues,\n            dayValues,\n            yearValues,\n            hourValues,\n            minuteValues,\n            minParts: this.minParts,\n            maxParts: this.maxParts,\n        });\n        this.processValue(this.value);\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            interactive: true,\n            datetime: true,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    /**\n     * Universal render methods\n     * These are pieces of datetime that\n     * are rendered independently of presentation.\n     */\n    renderFooter() {\n        const { disabled, readonly, showDefaultButtons, showClearButton } = this;\n        /**\n         * The cancel, clear, and confirm buttons\n         * should not be interactive if the datetime\n         * is disabled or readonly.\n         */\n        const isButtonDisabled = disabled || readonly;\n        const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n        if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n            return;\n        }\n        const clearButtonClick = () => {\n            this.reset();\n            this.setValue(undefined);\n        };\n        /**\n         * By default we render two buttons:\n         * Cancel - Dismisses the datetime and\n         * does not update the `value` prop.\n         * OK - Dismisses the datetime and\n         * updates the `value` prop.\n         */\n        return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n                ['datetime-action-buttons']: true,\n                ['has-clear-button']: this.showClearButton,\n            } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true), disabled: isButtonDisabled }, this.cancelText)), h(\"div\", { class: \"datetime-action-buttons-container\" }, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick(), disabled: isButtonDisabled }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true), disabled: isButtonDisabled }, this.doneText)))))))));\n    }\n    /**\n     * Wheel picker render methods\n     */\n    renderWheelPicker(forcePresentation = this.presentation) {\n        /**\n         * If presentation=\"time-date\" we switch the\n         * order of the render array here instead of\n         * manually reordering each date/time picker\n         * column with CSS. This allows for additional\n         * flexibility if we need to render subsets\n         * of the date/time data or do additional ordering\n         * within the child render functions.\n         */\n        const renderArray = forcePresentation === 'time-date'\n            ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n            : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n        return h(\"ion-picker\", null, renderArray);\n    }\n    renderDatePickerColumns(forcePresentation) {\n        return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n            ? this.renderCombinedDatePickerColumn()\n            : this.renderIndividualDatePickerColumns(forcePresentation);\n    }\n    renderCombinedDatePickerColumn() {\n        const { defaultParts, disabled, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n        const activePart = this.getActivePartsWithFallback();\n        /**\n         * By default, generate a range of 3 months:\n         * Previous month, current month, and next month\n         */\n        const monthsToRender = generateMonths(workingParts);\n        const lastMonth = monthsToRender[monthsToRender.length - 1];\n        /**\n         * Ensure that users can select the entire window of dates.\n         */\n        monthsToRender[0].day = 1;\n        lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n        /**\n         * Narrow the dates rendered based on min/max dates (if any).\n         * The `min` date is used if the min is after the generated min month.\n         * The `max` date is used if the max is before the generated max month.\n         * This ensures that the sliding window always stays at 3 months\n         * but still allows future dates to be lazily rendered based on any min/max\n         * constraints.\n         */\n        const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n        const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n        const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n        let items = result.items;\n        const parts = result.parts;\n        if (isDateEnabled) {\n            items = items.map((itemObject, index) => {\n                const referenceParts = parts[index];\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('[ion-datetime] - Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, itemObject), { disabled });\n            });\n        }\n        /**\n         * If we have selected a day already, then default the column\n         * to that value. Otherwise, set it to the default date.\n         */\n        const todayString = workingParts.day !== null\n            ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n            : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a date\", class: \"date-column\", color: this.color, disabled: disabled, value: todayString, onIonChange: (ev) => {\n                const { value } = ev.detail;\n                const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n                ev.stopPropagation();\n            } }, items.map((item) => (h(\"ion-picker-column-option\", { part: item.value === todayString ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: item.value, disabled: item.disabled, value: item.value }, item.text)))));\n    }\n    renderIndividualDatePickerColumns(forcePresentation) {\n        const { workingParts, isDateEnabled } = this;\n        const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n        const months = shouldRenderMonths\n            ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n            : [];\n        const shouldRenderDays = forcePresentation === 'date';\n        let days = shouldRenderDays\n            ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n            : [];\n        if (isDateEnabled) {\n            days = days.map((dayObject) => {\n                const { value } = dayObject;\n                const valueNum = typeof value === 'string' ? parseInt(value) : value;\n                const referenceParts = {\n                    month: workingParts.month,\n                    day: valueNum,\n                    year: workingParts.year,\n                };\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('[ion-datetime] - Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, dayObject), { disabled });\n            });\n        }\n        const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n        const years = shouldRenderYears\n            ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n            : [];\n        /**\n         * Certain locales show the day before the month.\n         */\n        const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n        let renderArray = [];\n        if (showMonthFirst) {\n            renderArray = [\n                this.renderMonthPickerColumn(months),\n                this.renderDayPickerColumn(days),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        else {\n            renderArray = [\n                this.renderDayPickerColumn(days),\n                this.renderMonthPickerColumn(months),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        return renderArray;\n    }\n    renderDayPickerColumn(days) {\n        var _a;\n        if (days.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        const pickerColumnValue = (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined;\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a day\", class: \"day-column\", color: this.color, disabled: disabled, value: pickerColumnValue, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n                ev.stopPropagation();\n            } }, days.map((day) => (h(\"ion-picker-column-option\", { part: day.value === pickerColumnValue ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: day.value, disabled: day.disabled, value: day.value }, day.text)))));\n    }\n    renderMonthPickerColumn(months) {\n        if (months.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a month\", class: \"month-column\", color: this.color, disabled: disabled, value: workingParts.month, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n                ev.stopPropagation();\n            } }, months.map((month) => (h(\"ion-picker-column-option\", { part: month.value === workingParts.month ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: month.value, disabled: month.disabled, value: month.value }, month.text)))));\n    }\n    renderYearPickerColumn(years) {\n        if (years.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a year\", class: \"year-column\", color: this.color, disabled: disabled, value: workingParts.year, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n                ev.stopPropagation();\n            } }, years.map((year) => (h(\"ion-picker-column-option\", { part: year.value === workingParts.year ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: year.value, disabled: year.disabled, value: year.value }, year.text)))));\n    }\n    renderTimePickerColumns(forcePresentation) {\n        if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n            return [];\n        }\n        /**\n         * If a user has not selected a date,\n         * then we should show all times. If the\n         * user has selected a date (even if it has\n         * not been confirmed yet), we should apply\n         * the max and min restrictions so that the\n         * time picker shows values that are\n         * appropriate for the selected date.\n         */\n        const activePart = this.getActivePart();\n        const userHasSelectedDate = activePart !== undefined;\n        const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n        return [\n            this.renderHourPickerColumn(hoursData),\n            this.renderMinutePickerColumn(minutesData),\n            this.renderDayPeriodPickerColumn(dayPeriodData),\n        ];\n    }\n    renderHourPickerColumn(hoursData) {\n        const { disabled, workingParts } = this;\n        if (hoursData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select an hour\", color: this.color, disabled: disabled, value: activePart.hour, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, this.getActivePartsWithFallback()), { hour: ev.detail.value }));\n                ev.stopPropagation();\n            } }, hoursData.map((hour) => (h(\"ion-picker-column-option\", { part: hour.value === activePart.hour ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: hour.value, disabled: hour.disabled, value: hour.value }, hour.text)))));\n    }\n    renderMinutePickerColumn(minutesData) {\n        const { disabled, workingParts } = this;\n        if (minutesData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a minute\", color: this.color, disabled: disabled, value: activePart.minute, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, this.getActivePartsWithFallback()), { minute: ev.detail.value }));\n                ev.stopPropagation();\n            } }, minutesData.map((minute) => (h(\"ion-picker-column-option\", { part: minute.value === activePart.minute ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: minute.value, disabled: minute.disabled, value: minute.value }, minute.text)))));\n    }\n    renderDayPeriodPickerColumn(dayPeriodData) {\n        const { disabled, workingParts } = this;\n        if (dayPeriodData.length === 0) {\n            return [];\n        }\n        const activePart = this.getActivePartsWithFallback();\n        const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a day period\", style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, disabled: disabled, value: activePart.ampm, onIonChange: (ev) => {\n                const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n                this.setActiveParts(Object.assign(Object.assign({}, this.getActivePartsWithFallback()), { ampm: ev.detail.value, hour }));\n                ev.stopPropagation();\n            } }, dayPeriodData.map((dayPeriod) => (h(\"ion-picker-column-option\", { part: dayPeriod.value === activePart.ampm ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: dayPeriod.value, disabled: dayPeriod.disabled, value: dayPeriod.value }, dayPeriod.text)))));\n    }\n    renderWheelView(forcePresentation) {\n        const { locale } = this;\n        const showMonthFirst = isMonthFirstLocale(locale);\n        const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n        return (h(\"div\", { class: {\n                [`wheel-order-${columnOrder}`]: true,\n            } }, this.renderWheelPicker(forcePresentation)));\n    }\n    /**\n     * Grid Render Methods\n     */\n    renderCalendarHeader(mode) {\n        const { disabled } = this;\n        const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n        const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n        const prevMonthDisabled = disabled || isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n        const nextMonthDisabled = disabled || isNextMonthDisabled(this.workingParts, this.maxParts);\n        // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n        const hostDir = this.el.getAttribute('dir') || undefined;\n        return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"button\", { class: {\n                'calendar-month-year-toggle': true,\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }, part: \"month-year-button\", disabled: disabled, \"aria-label\": this.showMonthAndYear ? 'Hide year picker' : 'Show year picker', onClick: () => this.toggleMonthAndYearView() }, h(\"span\", { id: \"toggle-wrapper\" }, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })), mode === 'md' && h(\"ion-ripple-effect\", null))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"Previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"Next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\", \"aria-hidden\": \"true\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n            return h(\"div\", { class: \"day-of-week\" }, d);\n        }))));\n    }\n    renderMonth(month, year) {\n        const { disabled, readonly } = this;\n        const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n        const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n        const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n        const isDatetimeDisabled = disabled || readonly;\n        const swipeDisabled = disabled ||\n            isMonthDisabled({\n                month,\n                year,\n                day: null,\n            }, {\n                // The day is not used when checking if a month is disabled.\n                // Users should be able to access the min or max month, even if the\n                // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n                minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n            });\n        // The working month should never have swipe disabled.\n        // Otherwise the CSS scroll snap will not work and the user\n        // can free-scroll the calendar.\n        const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n                'calendar-month': true,\n                // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n                'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n            } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7, this.showAdjacentDays).map((dateObject, index) => {\n            const { day, dayOfWeek, isAdjacentDay } = dateObject;\n            const { el, highlightedDates, isDateEnabled, multiple, showAdjacentDays } = this;\n            let _month = month;\n            let _year = year;\n            if (showAdjacentDays && isAdjacentDay && day !== null) {\n                if (day > 20) {\n                    // Leading with the adjacent day from the previous month\n                    // if its a adjacent day and is higher than '20' (last week even in feb)\n                    if (month === 1) {\n                        _year = year - 1;\n                        _month = 12;\n                    }\n                    else {\n                        _month = month - 1;\n                    }\n                }\n                else if (day < 15) {\n                    // Leading with the adjacent day from the next month\n                    // if its a adjacent day and is lower than '15' (first two weeks)\n                    if (month === 12) {\n                        _year = year + 1;\n                        _month = 1;\n                    }\n                    else {\n                        _month = month + 1;\n                    }\n                }\n            }\n            const referenceParts = { month: _month, day, year: _year, isAdjacentDay };\n            const isCalendarPadding = day === null;\n            const { isActive, isToday, ariaLabel, ariaSelected, disabled: isDayDisabled, text, } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n            const dateIsoString = convertDataToISO(referenceParts);\n            let isCalDayDisabled = isCalMonthDisabled || isDayDisabled;\n            if (!isCalDayDisabled && isDateEnabled !== undefined) {\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    isCalDayDisabled = !isDateEnabled(dateIsoString);\n                }\n                catch (e) {\n                    printIonError('[ion-datetime] - Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n                }\n            }\n            /**\n             * Some days are constrained through max & min or allowed dates\n             * and also disabled because the component is readonly or disabled.\n             * These need to be displayed differently.\n             */\n            const isCalDayConstrained = isCalDayDisabled && isDatetimeDisabled;\n            const isButtonDisabled = isCalDayDisabled || isDatetimeDisabled;\n            let dateStyle = undefined;\n            /**\n             * Custom highlight styles should not override the style for selected dates,\n             * nor apply to \"filler days\" at the start of the grid.\n             */\n            if (highlightedDates !== undefined && !isActive && day !== null && !isAdjacentDay) {\n                dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n            }\n            let dateParts = undefined;\n            // \"Filler days\" at the beginning of the grid should not get the calendar day\n            // CSS parts added to them\n            if (!isCalendarPadding && !isAdjacentDay) {\n                dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n            }\n            else if (isAdjacentDay) {\n                dateParts = `calendar-day${isCalDayDisabled ? ' disabled' : ''}`;\n            }\n            return (h(\"div\", { class: \"calendar-day-wrapper\" }, h(\"button\", {\n                // We need to use !important for the inline styles here because\n                // otherwise the CSS shadow parts will override these styles.\n                // See https://github.com/WICG/webcomponents/issues/847\n                // Both the CSS shadow parts and highlightedDates styles are\n                // provided by the developer, but highlightedDates styles should\n                // always take priority.\n                ref: (el) => {\n                    if (el) {\n                        el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n                        el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n                        el.style.setProperty('border', `${dateStyle ? dateStyle.border : ''}`, 'important');\n                    }\n                }, tabindex: \"-1\", \"data-day\": day, \"data-month\": _month, \"data-year\": _year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isButtonDisabled, class: {\n                    'calendar-day-padding': isCalendarPadding,\n                    'calendar-day': true,\n                    'calendar-day-active': isActive,\n                    'calendar-day-constrained': isCalDayConstrained,\n                    'calendar-day-today': isToday,\n                    'calendar-day-adjacent-day': isAdjacentDay,\n                }, part: dateParts, \"aria-hidden\": isCalendarPadding ? 'true' : null, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n                    if (isCalendarPadding) {\n                        return;\n                    }\n                    if (isAdjacentDay) {\n                        // The user selected a day outside the current month. Ignore this button, as the month will be re-rendered.\n                        this.el.blur();\n                        this.activeParts = Object.assign(Object.assign({}, activePart), referenceParts);\n                        this.animateToDate(referenceParts);\n                        this.confirm();\n                    }\n                    else {\n                        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), referenceParts));\n                        // Multiple only needs date info so we can wipe out other fields like time.\n                        if (multiple) {\n                            this.setActiveParts(referenceParts, isActive);\n                        }\n                        else {\n                            this.setActiveParts(Object.assign(Object.assign({}, activePart), referenceParts));\n                        }\n                    }\n                }\n            }, text)));\n        }))));\n    }\n    renderCalendarBody() {\n        return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts, this.forceRenderDate).map(({ month, year }) => {\n            return this.renderMonth(month, year);\n        })));\n    }\n    renderCalendar(mode) {\n        return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n    }\n    renderTimeLabel() {\n        const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n        if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n            return;\n        }\n        return h(\"slot\", { name: \"time-label\" }, \"Time\");\n    }\n    renderTimeOverlay() {\n        const { disabled, hourCycle, isTimePopoverOpen, locale, formatOptions } = this;\n        const computedHourCycle = getHourCycle(locale, hourCycle);\n        const activePart = this.getActivePartsWithFallback();\n        return [\n            h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n            h(\"button\", { class: {\n                    'time-body': true,\n                    'time-body-active': isTimePopoverOpen,\n                }, part: `time-button${isTimePopoverOpen ? ' active' : ''}`, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", disabled: disabled, onClick: async (ev) => {\n                    const { popoverRef } = this;\n                    if (popoverRef) {\n                        this.isTimePopoverOpen = true;\n                        popoverRef.present(new CustomEvent('ionShadowTarget', {\n                            detail: {\n                                ionShadowTarget: ev.target,\n                            },\n                        }));\n                        await popoverRef.onWillDismiss();\n                        this.isTimePopoverOpen = false;\n                    }\n                } }, getLocalizedTime(locale, activePart, computedHourCycle, formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time)),\n            h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n                    /**\n                     * Intersection Observers do not consistently fire between Blink and Webkit\n                     * when toggling the visibility of the popover and trying to scroll the picker\n                     * column to the correct time value.\n                     *\n                     * This will correctly scroll the element position to the correct time value,\n                     * before the popover is fully presented.\n                     */\n                    const cols = ev.target.querySelectorAll('ion-picker-column');\n                    // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n                    cols.forEach((col) => col.scrollActiveItemIntoView());\n                }, style: {\n                    '--offset-y': '-10px',\n                    '--min-width': 'fit-content',\n                },\n                // Allow native browser keyboard events to support up/down/home/end key\n                // navigation within the time picker.\n                keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n        ];\n    }\n    getHeaderSelectedDateText() {\n        var _a;\n        const { activeParts, formatOptions, multiple, titleSelectedDatesFormatter } = this;\n        const isArray = Array.isArray(activeParts);\n        let headerText;\n        if (multiple && isArray && activeParts.length !== 1) {\n            headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n            if (titleSelectedDatesFormatter !== undefined) {\n                try {\n                    headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n                }\n                catch (e) {\n                    printIonError('[ion-datetime] - Exception in provided `titleSelectedDatesFormatter`:', e);\n                }\n            }\n        }\n        else {\n            // for exactly 1 day selected (multiple set or not), show a formatted version of that\n            headerText = getLocalizedDateTime(this.locale, this.getActivePartsWithFallback(), (_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) !== null && _a !== void 0 ? _a : { weekday: 'short', month: 'short', day: 'numeric' });\n        }\n        return headerText;\n    }\n    renderHeader(showExpandedHeader = true) {\n        const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n        if (!hasSlottedTitle && !this.showDefaultTitle) {\n            return;\n        }\n        return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n    }\n    /**\n     * Render time picker inside of datetime.\n     * Do not pass color prop to segment on\n     * iOS mode. MD segment has been customized and\n     * should take on the color prop, but iOS\n     * should just be the default segment.\n     */\n    renderTime() {\n        const { presentation } = this;\n        const timeOnlyPresentation = presentation === 'time';\n        return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n    }\n    /**\n     * Renders the month/year picker that is\n     * displayed on the calendar grid.\n     * The .datetime-year class has additional\n     * styles that let us show/hide the\n     * picker when the user clicks on the\n     * toggle in the calendar header.\n     */\n    renderCalendarViewMonthYearPicker() {\n        return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n    }\n    /**\n     * Render entry point\n     * All presentation types are rendered from here.\n     */\n    renderDatetime(mode) {\n        const { presentation, preferWheel } = this;\n        /**\n         * Certain presentation types have separate grid and wheel displays.\n         * If preferWheel is true then we should show a wheel picker instead.\n         */\n        const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        if (preferWheel && hasWheelVariant) {\n            return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n        }\n        switch (presentation) {\n            case 'date-time':\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderTime(),\n                    this.renderFooter(),\n                ];\n            case 'time-date':\n                return [\n                    this.renderHeader(),\n                    this.renderTime(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n            case 'time':\n                return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n            case 'month':\n            case 'month-year':\n            case 'year':\n                return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n            default:\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n        }\n    }\n    render() {\n        const { name, value, disabled, el, color, readonly, showMonthAndYear, preferWheel, presentation, size, isGridStyle, } = this;\n        const mode = getIonMode(this);\n        const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n        const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n        const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        const hasWheelVariant = hasDatePresentation && preferWheel;\n        renderHiddenInput(true, el, name, formatValue(value), disabled);\n        return (h(Host, { key: 'f35cf200ff05d33074576e3d2754d3b2a0735b96', \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n                [mode]: true,\n                ['datetime-readonly']: readonly,\n                ['datetime-disabled']: disabled,\n                'show-month-and-year': shouldShowMonthAndYear,\n                'month-year-picker-open': monthYearPickerOpen,\n                [`datetime-presentation-${presentation}`]: true,\n                [`datetime-size-${size}`]: true,\n                [`datetime-prefer-wheel`]: hasWheelVariant,\n                [`datetime-grid`]: isGridStyle,\n            })) }, h(\"div\", { key: '859e9354a12bfa58ac3f964c2e66839f17071c00', class: \"intersection-tracker\", ref: (el) => (this.intersectionTrackerRef = el) }), this.renderDatetime(mode)));\n    }\n    get el() { return this; }\n    static get watchers() { return {\n        \"formatOptions\": [\"formatOptionsChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"presentation\": [\"presentationChanged\"],\n        \"yearValues\": [\"yearValuesChanged\"],\n        \"monthValues\": [\"monthValuesChanged\"],\n        \"dayValues\": [\"dayValuesChanged\"],\n        \"hourValues\": [\"hourValuesChanged\"],\n        \"minuteValues\": [\"minuteValuesChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return {\n        ios: datetimeIosCss,\n        md: datetimeMdCss\n    }; }\n}, [289, \"ion-datetime\", {\n        \"color\": [1],\n        \"name\": [1],\n        \"disabled\": [4],\n        \"formatOptions\": [16, \"format-options\"],\n        \"readonly\": [4],\n        \"isDateEnabled\": [16, \"is-date-enabled\"],\n        \"showAdjacentDays\": [4, \"show-adjacent-days\"],\n        \"min\": [1025],\n        \"max\": [1025],\n        \"presentation\": [1],\n        \"cancelText\": [1, \"cancel-text\"],\n        \"doneText\": [1, \"done-text\"],\n        \"clearText\": [1, \"clear-text\"],\n        \"yearValues\": [8, \"year-values\"],\n        \"monthValues\": [8, \"month-values\"],\n        \"dayValues\": [8, \"day-values\"],\n        \"hourValues\": [8, \"hour-values\"],\n        \"minuteValues\": [8, \"minute-values\"],\n        \"locale\": [1],\n        \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n        \"titleSelectedDatesFormatter\": [16, \"title-selected-dates-formatter\"],\n        \"multiple\": [4],\n        \"highlightedDates\": [16, \"highlighted-dates\"],\n        \"value\": [1025],\n        \"showDefaultTitle\": [4, \"show-default-title\"],\n        \"showDefaultButtons\": [4, \"show-default-buttons\"],\n        \"showClearButton\": [4, \"show-clear-button\"],\n        \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n        \"hourCycle\": [1, \"hour-cycle\"],\n        \"size\": [1],\n        \"preferWheel\": [4, \"prefer-wheel\"],\n        \"showMonthAndYear\": [32],\n        \"activeParts\": [32],\n        \"workingParts\": [32],\n        \"isTimePopoverOpen\": [32],\n        \"forceRenderDate\": [32],\n        \"confirm\": [64],\n        \"reset\": [64],\n        \"cancel\": [64]\n    }, undefined, {\n        \"formatOptions\": [\"formatOptionsChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"presentation\": [\"presentationChanged\"],\n        \"yearValues\": [\"yearValuesChanged\"],\n        \"monthValues\": [\"monthValuesChanged\"],\n        \"dayValues\": [\"dayValuesChanged\"],\n        \"hourValues\": [\"hourValuesChanged\"],\n        \"minuteValues\": [\"minuteValuesChanged\"],\n        \"value\": [\"valueChanged\"]\n    }]);\nlet datetimeIds = 0;\nconst CANCEL_ROLE = 'datetime-cancel';\nconst CONFIRM_ROLE = 'datetime-confirm';\nconst WHEEL_ITEM_PART = 'wheel-item';\nconst WHEEL_ITEM_ACTIVE_PART = `active`;\nfunction defineCustomElement$1() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-picker\", \"ion-picker-column\", \"ion-picker-column-option\", \"ion-popover\", \"ion-ripple-effect\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-datetime\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Datetime);\n            }\n            break;\n        case \"ion-backdrop\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$a();\n            }\n            break;\n        case \"ion-button\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$9();\n            }\n            break;\n        case \"ion-buttons\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$8();\n            }\n            break;\n        case \"ion-icon\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$7();\n            }\n            break;\n        case \"ion-picker\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$6();\n            }\n            break;\n        case \"ion-picker-column\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$5();\n            }\n            break;\n        case \"ion-picker-column-option\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$4();\n            }\n            break;\n        case \"ion-popover\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$3();\n            }\n            break;\n        case \"ion-ripple-effect\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$2();\n            }\n            break;\n    } });\n}\n\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonDatetime, defineCustomElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}